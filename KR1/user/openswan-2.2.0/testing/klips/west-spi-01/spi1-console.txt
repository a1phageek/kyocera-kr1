Starting UML PATH/start.sh
spawn PATH single
Linux version XXXX
On node 0 totalpages: 8192
Kernel command line:
Calibrating delay loop... XXXX bogomips
Dentry-cache hash table entries: NUMBERS
Inode-cache hash table entries: NUMBERS
Mount-cache hash table entries: NUMBERS
Buffer-cache hash table entries: NUMBERS
Page-cache hash table entries: NUMEBRS
POSIX conformance testing by UNIFIX
Linux NET4.0 for Linux 2.4
Based upon Swansea University Computer Society NET3.039
Initializing RT netlink socket
Starting kswapd
VFS: Diskquotas version dquot_6.4.0 initialized
devfs: VERSION Richard Gooch (rgooch@atnf.csiro.au)
devfs: boot_options Q
pty: 256 Unix98 ptys configured
SLIP: version 0.8.4-NET3.019-NEWTTY (dynamic channels, max=256).
loop: loaded (max 8 devices)
PPP generic driver version VERSION
Universal TUN/TAP device driver VERSION
NET4: Linux TCP/IP 1.0 for NET4.0
IP Protocols: ICMP, UDP, TCP
IP: routing cache hash table of 512 buckets, 4Kbytes
TCP: Hash tables configured (established 2048 bind 2048)
IPv4 over IPv4 tunneling driver
GRE over IPv4 tunneling driver
NET4: Unix domain sockets 1.0/SMP for Linux NET4.0.
Mounted devfs on /dev
INIT: version 2.78 booting
Activating swap...
Calculating module dependancies
done.
Loading modules: LIST

Checking all file systems...
Parallelizing fsck version 1.18 (11-Nov-1999)
Setting kernel variables.
Mounting local filesystems...
/dev/shm on /tmp type tmpfs (rw)
/dev/shm on /var/run type tmpfs (rw)
devpts on /dev/pts type devpts (rw,mode=0622)
none on /usr/share type hostfs (ro)
Enabling packet forwarding: done.
Configuring network interfaces: done.
Cleaning: /tmp /var/lock /var/run.
Initializing random number generator... done.
Recovering nvi editor sessions... done.
Give root password for maintenance
(or type Control-D for normal startup): 
west:~#
 klogd -c 4 -x -f /tmp/klog.log
west:~#
 TZ=GMT export TZ
west:~#
 ipsec spi --clear
west:~#
 ipsec eroute --clear
west:~#
 enckey=0x4043434545464649494a4a4c4c4f4f515152525454575758
west:~#
 inspi=0x01000583
west:~#
 outspi=$inspi
west:~#
 eastip=192.1.2.23
west:~#
 westip=192.1.2.45
west:~#
 source=192.0.2.0/24
west:~#
 dst=192.0.1.0/24
west:~#
 ipsec spi --af inet --edst $eastip  --spi $outspi --proto esp --src $westip --esp 3des --enckey $enckey 
west:~#
 ipsec spi --af inet --edst $eastip  --spi $outspi --proto tun --src $westip --dst $eastip --ip4
west:~#
 ipsec spigrp inet $eastip $outspi tun inet $eastip $outspi esp 
west:~#
 ipsec eroute --add --eraf inet --src $source --dst $dst --said tun$inspi@$eastip
west:~#
 ipsec spi --af inet --edst $westip --spi $inspi  --proto esp --src $eastip --esp 3des --enckey $enckey 
west:~#
 ipsec spi --af inet --edst $westip --spi $inspi  --proto tun --src $eastip --dst $westip --ip4
west:~#
 ipsec spigrp inet $westip $inspi tun inet $westip $inspi esp 
west:~#
 route add -net 192.0.1.0 netmask 255.255.255.0 gw 192.1.2.45 dev ipsec0
SIOCADDRT: Network is unreachable
west:~#
 ipsec tncfg --attach --virtual ipsec0 --physical eth1
west:~#
 ifconfig ipsec0 inet 192.1.2.45 netmask 0xffffff00 broadcast 192.1.2.255 up
west:~#
 arp -s 192.0.1.1  10:00:00:ab:cd:01
west:~#
 arp -s 192.1.2.23 10:00:00:64:64:23
west:~#
 arp -s 192.1.2.254 10:00:00:64:64:23
west:~#
 ipsec look
west NOW
192.0.2.0/24       -> 192.0.1.0/24       => tun0x1000583@192.1.2.23 esp0x1000583@192.1.2.23  (0)
ipsec0->eth1 mtu=16260(1500)->1500
esp0x1000583@192.1.2.23 ESP_3DES: dir=out src=192.1.2.45 iv_bits=64bits iv=0xDEADF00DDEADF00D eklen=192 life(c,s,h)= refcount=4 ref=2
esp0x1000583@192.1.2.45 ESP_3DES: dir=in  src=192.1.2.23 iv_bits=64bits iv=0xDEADF00DDEADF00D eklen=192 life(c,s,h)= refcount=4 ref=7
tun0x1000583@192.1.2.23 IPIP: dir=out src=192.1.2.45 life(c,s,h)= refcount=4 ref=3
tun0x1000583@192.1.2.45 IPIP: dir=in  src=192.1.2.23 life(c,s,h)= refcount=4 ref=8
Destination     Gateway         Genmask         Flags   MSS Window  irtt Iface
west:~#
 ipsec klipsdebug --all 
west:~#
 ipsec setup stop
IPSEC EVENT: KLIPS device ipsec0 shut down.
ipsec_setup: Stopping Openswan IPsec...
ipsec_setup: stop ordered, but IPsec does not appear to be running!
ipsec_setup: doing cleanup anyway...
west:~#
 kill `cat /var/run/klogd.pid`; cat /tmp/klog.log
klogd 1.3-3#33.1, log source = /proc/kmsg started.
west:~#
 halt -p -f
Power down.
klips_debug:pfkey_x_debug_process: set
klips_debug:pfkey_msg_interp: parsing message type 16(x-debug) with msg_parser 0pDEADF00D.
klips_debug:pfkey_x_msg_debug_parse: .
klips_debug:ipsec_sa_wipe: removing SA=unk0:0@<invalid>(0pDEADF00D), SAref=11, table=0(0pDEADF00D), entry=11 from the refTable.
klips_debug:ipsec_sa_put: ipsec_sa SA:unk0:0@<invalid>, ref:-1 reference count decremented.
klips_debug:pfkey_release: sock=0pDEADF00D sk=0pDEADF00D
klips_debug:pfkey_destroy_socket: .
klips_debug:pfkey_remove_socket: .
klips_debug:pfkey_remove_socket: succeeded.
klips_debug:pfkey_destroy_socket: pfkey_remove_socket called.
klips_debug:pfkey_destroy_socket: sk(0pDEADF00D)->(&0pDEADF00D)receive_queue.{next=0pDEADF00D,prev=0pDEADF00D}.
klips_debug:pfkey_destroy_socket: destroyed.
klips_debug:pfkey_list_remove_socket: removing sock=0pDEADF00D
klips_debug:pfkey_list_remove_socket: removing sock=0pDEADF00D
klips_debug:pfkey_list_remove_socket: removing sock=0pDEADF00D
klips_debug:pfkey_list_remove_socket: removing sock=0pDEADF00D
klips_debug:pfkey_list_remove_socket: removing sock=0pDEADF00D
klips_debug:pfkey_list_remove_socket: removing sock=0pDEADF00D
klips_debug:pfkey_list_remove_socket: removing sock=0pDEADF00D
klips_debug:pfkey_list_remove_socket: removing sock=0pDEADF00D
klips_debug:pfkey_list_remove_socket: removing sock=0pDEADF00D
klips_debug:pfkey_list_remove_socket: removing sock=0pDEADF00D
klips_debug:pfkey_list_remove_socket: removing sock=0pDEADF00D
klips_debug:pfkey_list_remove_socket: removing sock=0pDEADF00D
klips_debug:pfkey_list_remove_socket: removing sock=0pDEADF00D
klips_debug:pfkey_release: succeeded.
klips_debug:ipsec_rcv: <<< Info -- skb->dev=eth1 dev=eth1 
klips_debug:ipsec_rcv: assigning packet ownership to virtual device ipsec0 from physical device eth1.
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:124 id:17050 frag_off:0 ttl:64 proto:50 chk:45935 saddr:192.1.2.23 daddr:192.1.2.45
klips_debug:ipsec_rcv_decap_once: decap (50) from 192.1.2.23 -> 192.1.2.45
klips_debug:ipsec_sa_getbyid: linked entry in ipsec_sa table for hash=73 of SA:esp.1000583@192.1.2.45 requested.
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45, src=192.1.2.23 of pkt agrees with expected SA source address policy.
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45 First SA in group.
klips_debug:ipsec_rcv: natt_type=0 tdbp->ips_natt_type=0 : ok
klips_debug:ipsec_rcv: padlen=2, contents: 0x<offset>: 0x<value> 0x<value> ...
klips_debug:           00: 01 02
klips_debug:ipsec_rcv: packet decrypted from 192.1.2.23: next_header = 4, padding = 2
klips_debug:ipsec_rcv: trimming to 104.
klips_debug:ipsec_rcv: after <ESP_3DES>, SA:esp.1000583@192.1.2.45:
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:104 id:17050 frag_off:0 ttl:64 proto:4 chk:46001 saddr:192.1.2.23 daddr:192.1.2.45
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45, Another IPSEC header to process.
klips_debug:ipsec_rcv: ESP SA sets skb->nfmark=0x70000.
klips_debug:ipsec_rcv: IPIP tunnel stripped.
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:84 id:0 DF frag_off:0 ttl:63 proto:1 (ICMP) chk:47270 saddr:192.0.2.1 daddr:192.0.1.1 type:code=8:0
klips_debug:ipsec_rcv: IPIP SA sets skb->nfmark=0xf0000.
klips_debug:ipsec_rcv: netif_rx() called.
klips_debug:ipsec_rcv: <<< Info -- skb->dev=eth1 dev=eth1 
klips_debug:ipsec_rcv: assigning packet ownership to virtual device ipsec0 from physical device eth1.
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:124 id:17051 frag_off:0 ttl:64 proto:50 chk:45934 saddr:192.1.2.23 daddr:192.1.2.45
klips_debug:ipsec_rcv_decap_once: decap (50) from 192.1.2.23 -> 192.1.2.45
klips_debug:ipsec_sa_getbyid: linked entry in ipsec_sa table for hash=73 of SA:esp.1000583@192.1.2.45 requested.
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45, src=192.1.2.23 of pkt agrees with expected SA source address policy.
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45 First SA in group.
klips_debug:ipsec_rcv: natt_type=0 tdbp->ips_natt_type=0 : ok
klips_debug:ipsec_rcv: padlen=2, contents: 0x<offset>: 0x<value> 0x<value> ...
klips_debug:           00: 01 02
klips_debug:ipsec_rcv: packet decrypted from 192.1.2.23: next_header = 4, padding = 2
klips_debug:ipsec_rcv: trimming to 104.
klips_debug:ipsec_rcv: after <ESP_3DES>, SA:esp.1000583@192.1.2.45:
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:104 id:17051 frag_off:0 ttl:64 proto:4 chk:46000 saddr:192.1.2.23 daddr:192.1.2.45
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45, Another IPSEC header to process.
klips_debug:ipsec_rcv: ESP SA sets skb->nfmark=0x70000.
klips_debug:ipsec_rcv: IPIP tunnel stripped.
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:84 id:0 DF frag_off:0 ttl:63 proto:1 (ICMP) chk:47270 saddr:192.0.2.1 daddr:192.0.1.1 type:code=8:0
klips_debug:ipsec_rcv: IPIP SA sets skb->nfmark=0xf0000.
klips_debug:ipsec_rcv: netif_rx() called.
klips_debug:ipsec_rcv: <<< Info -- skb->dev=eth1 dev=eth1 
klips_debug:ipsec_rcv: assigning packet ownership to virtual device ipsec0 from physical device eth1.
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:124 id:17052 frag_off:0 ttl:64 proto:50 chk:45933 saddr:192.1.2.23 daddr:192.1.2.45
klips_debug:ipsec_rcv_decap_once: decap (50) from 192.1.2.23 -> 192.1.2.45
klips_debug:ipsec_sa_getbyid: linked entry in ipsec_sa table for hash=73 of SA:esp.1000583@192.1.2.45 requested.
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45, src=192.1.2.23 of pkt agrees with expected SA source address policy.
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45 First SA in group.
klips_debug:ipsec_rcv: natt_type=0 tdbp->ips_natt_type=0 : ok
klips_debug:ipsec_rcv: padlen=2, contents: 0x<offset>: 0x<value> 0x<value> ...
klips_debug:           00: 01 02
klips_debug:ipsec_rcv: packet decrypted from 192.1.2.23: next_header = 4, padding = 2
klips_debug:ipsec_rcv: trimming to 104.
klips_debug:ipsec_rcv: after <ESP_3DES>, SA:esp.1000583@192.1.2.45:
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:104 id:17052 frag_off:0 ttl:64 proto:4 chk:45999 saddr:192.1.2.23 daddr:192.1.2.45
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45, Another IPSEC header to process.
klips_debug:ipsec_rcv: ESP SA sets skb->nfmark=0x70000.
klips_debug:ipsec_rcv: IPIP tunnel stripped.
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:84 id:0 DF frag_off:0 ttl:63 proto:1 (ICMP) chk:47270 saddr:192.0.2.1 daddr:192.0.1.1 type:code=8:0
klips_debug:ipsec_rcv: IPIP SA sets skb->nfmark=0xf0000.
klips_debug:ipsec_rcv: netif_rx() called.
klips_debug:ipsec_rcv: <<< Info -- skb->dev=eth1 dev=eth1 
klips_debug:ipsec_rcv: assigning packet ownership to virtual device ipsec0 from physical device eth1.
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:124 id:17053 frag_off:0 ttl:64 proto:50 chk:45932 saddr:192.1.2.23 daddr:192.1.2.45
klips_debug:ipsec_rcv_decap_once: decap (50) from 192.1.2.23 -> 192.1.2.45
klips_debug:ipsec_sa_getbyid: linked entry in ipsec_sa table for hash=73 of SA:esp.1000583@192.1.2.45 requested.
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45, src=192.1.2.23 of pkt agrees with expected SA source address policy.
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45 First SA in group.
klips_debug:ipsec_rcv: natt_type=0 tdbp->ips_natt_type=0 : ok
klips_debug:ipsec_rcv: padlen=2, contents: 0x<offset>: 0x<value> 0x<value> ...
klips_debug:           00: 01 02
klips_debug:ipsec_rcv: packet decrypted from 192.1.2.23: next_header = 4, padding = 2
klips_debug:ipsec_rcv: trimming to 104.
klips_debug:ipsec_rcv: after <ESP_3DES>, SA:esp.1000583@192.1.2.45:
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:104 id:17053 frag_off:0 ttl:64 proto:4 chk:45998 saddr:192.1.2.23 daddr:192.1.2.45
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45, Another IPSEC header to process.
klips_debug:ipsec_rcv: ESP SA sets skb->nfmark=0x70000.
klips_debug:ipsec_rcv: IPIP tunnel stripped.
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:84 id:0 DF frag_off:0 ttl:63 proto:1 (ICMP) chk:47270 saddr:192.0.2.1 daddr:192.0.1.1 type:code=8:0
klips_debug:ipsec_rcv: IPIP SA sets skb->nfmark=0xf0000.
klips_debug:ipsec_rcv: netif_rx() called.
klips_debug:ipsec_rcv: <<< Info -- skb->dev=eth1 dev=eth1 
klips_debug:ipsec_rcv: assigning packet ownership to virtual device ipsec0 from physical device eth1.
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:124 id:17054 frag_off:0 ttl:64 proto:50 chk:45931 saddr:192.1.2.23 daddr:192.1.2.45
klips_debug:ipsec_rcv_decap_once: decap (50) from 192.1.2.23 -> 192.1.2.45
klips_debug:ipsec_sa_getbyid: linked entry in ipsec_sa table for hash=73 of SA:esp.1000583@192.1.2.45 requested.
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45, src=192.1.2.23 of pkt agrees with expected SA source address policy.
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45 First SA in group.
klips_debug:ipsec_rcv: natt_type=0 tdbp->ips_natt_type=0 : ok
klips_debug:ipsec_rcv: padlen=2, contents: 0x<offset>: 0x<value> 0x<value> ...
klips_debug:           00: 01 02
klips_debug:ipsec_rcv: packet decrypted from 192.1.2.23: next_header = 4, padding = 2
klips_debug:ipsec_rcv: trimming to 104.
klips_debug:ipsec_rcv: after <ESP_3DES>, SA:esp.1000583@192.1.2.45:
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:104 id:17054 frag_off:0 ttl:64 proto:4 chk:45997 saddr:192.1.2.23 daddr:192.1.2.45
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45, Another IPSEC header to process.
klips_debug:ipsec_rcv: ESP SA sets skb->nfmark=0x70000.
klips_debug:ipsec_rcv: IPIP tunnel stripped.
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:84 id:0 DF frag_off:0 ttl:63 proto:1 (ICMP) chk:47270 saddr:192.0.2.1 daddr:192.0.1.1 type:code=8:0
klips_debug:ipsec_rcv: IPIP SA sets skb->nfmark=0xf0000.
klips_debug:ipsec_rcv: netif_rx() called.
klips_debug:ipsec_rcv: <<< Info -- skb->dev=eth1 dev=eth1 
klips_debug:ipsec_rcv: assigning packet ownership to virtual device ipsec0 from physical device eth1.
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:124 id:17055 frag_off:0 ttl:64 proto:50 chk:45930 saddr:192.1.2.23 daddr:192.1.2.45
klips_debug:ipsec_rcv_decap_once: decap (50) from 192.1.2.23 -> 192.1.2.45
klips_debug:ipsec_sa_getbyid: linked entry in ipsec_sa table for hash=73 of SA:esp.1000583@192.1.2.45 requested.
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45, src=192.1.2.23 of pkt agrees with expected SA source address policy.
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45 First SA in group.
klips_debug:ipsec_rcv: natt_type=0 tdbp->ips_natt_type=0 : ok
klips_debug:ipsec_rcv: padlen=2, contents: 0x<offset>: 0x<value> 0x<value> ...
klips_debug:           00: 01 02
klips_debug:ipsec_rcv: packet decrypted from 192.1.2.23: next_header = 4, padding = 2
klips_debug:ipsec_rcv: trimming to 104.
klips_debug:ipsec_rcv: after <ESP_3DES>, SA:esp.1000583@192.1.2.45:
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:104 id:17055 frag_off:0 ttl:64 proto:4 chk:45996 saddr:192.1.2.23 daddr:192.1.2.45
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45, Another IPSEC header to process.
klips_debug:ipsec_rcv: ESP SA sets skb->nfmark=0x70000.
klips_debug:ipsec_rcv: IPIP tunnel stripped.
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:84 id:0 DF frag_off:0 ttl:63 proto:1 (ICMP) chk:47270 saddr:192.0.2.1 daddr:192.0.1.1 type:code=8:0
klips_debug:ipsec_rcv: IPIP SA sets skb->nfmark=0xf0000.
klips_debug:ipsec_rcv: netif_rx() called.
klips_debug:ipsec_rcv: <<< Info -- skb->dev=eth1 dev=eth1 
klips_debug:ipsec_rcv: assigning packet ownership to virtual device ipsec0 from physical device eth1.
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:124 id:17056 frag_off:0 ttl:64 proto:50 chk:45929 saddr:192.1.2.23 daddr:192.1.2.45
klips_debug:ipsec_rcv_decap_once: decap (50) from 192.1.2.23 -> 192.1.2.45
klips_debug:ipsec_sa_getbyid: linked entry in ipsec_sa table for hash=73 of SA:esp.1000583@192.1.2.45 requested.
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45, src=192.1.2.23 of pkt agrees with expected SA source address policy.
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45 First SA in group.
klips_debug:ipsec_rcv: natt_type=0 tdbp->ips_natt_type=0 : ok
klips_debug:ipsec_rcv: padlen=2, contents: 0x<offset>: 0x<value> 0x<value> ...
klips_debug:           00: 01 02
klips_debug:ipsec_rcv: packet decrypted from 192.1.2.23: next_header = 4, padding = 2
klips_debug:ipsec_rcv: trimming to 104.
klips_debug:ipsec_rcv: after <ESP_3DES>, SA:esp.1000583@192.1.2.45:
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:104 id:17056 frag_off:0 ttl:64 proto:4 chk:45995 saddr:192.1.2.23 daddr:192.1.2.45
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45, Another IPSEC header to process.
klips_debug:ipsec_rcv: ESP SA sets skb->nfmark=0x70000.
klips_debug:ipsec_rcv: IPIP tunnel stripped.
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:84 id:0 DF frag_off:0 ttl:63 proto:1 (ICMP) chk:47270 saddr:192.0.2.1 daddr:192.0.1.1 type:code=8:0
klips_debug:ipsec_rcv: IPIP SA sets skb->nfmark=0xf0000.
klips_debug:ipsec_rcv: netif_rx() called.
klips_debug:ipsec_rcv: <<< Info -- skb->dev=eth1 dev=eth1 
klips_debug:ipsec_rcv: assigning packet ownership to virtual device ipsec0 from physical device eth1.
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:124 id:17057 frag_off:0 ttl:64 proto:50 chk:45928 saddr:192.1.2.23 daddr:192.1.2.45
klips_debug:ipsec_rcv_decap_once: decap (50) from 192.1.2.23 -> 192.1.2.45
klips_debug:ipsec_sa_getbyid: linked entry in ipsec_sa table for hash=73 of SA:esp.1000583@192.1.2.45 requested.
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45, src=192.1.2.23 of pkt agrees with expected SA source address policy.
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45 First SA in group.
klips_debug:ipsec_rcv: natt_type=0 tdbp->ips_natt_type=0 : ok
klips_debug:ipsec_rcv: padlen=2, contents: 0x<offset>: 0x<value> 0x<value> ...
klips_debug:           00: 01 02
klips_debug:ipsec_rcv: packet decrypted from 192.1.2.23: next_header = 4, padding = 2
klips_debug:ipsec_rcv: trimming to 104.
klips_debug:ipsec_rcv: after <ESP_3DES>, SA:esp.1000583@192.1.2.45:
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:104 id:17057 frag_off:0 ttl:64 proto:4 chk:45994 saddr:192.1.2.23 daddr:192.1.2.45
klips_debug:ipsec_rcv: SA:esp.1000583@192.1.2.45, Another IPSEC header to process.
klips_debug:ipsec_rcv: ESP SA sets skb->nfmark=0x70000.
klips_debug:ipsec_rcv: IPIP tunnel stripped.
klips_debug:   IP: ihl:20 ver:4 tos:0 tlen:84 id:0 DF frag_off:0 ttl:63 proto:1 (ICMP) chk:47270 saddr:192.0.2.1 daddr:192.0.1.1 type:code=8:0
klips_debug:ipsec_rcv: IPIP SA sets skb->nfmark=0xf0000.
klips_debug:ipsec_rcv: netif_rx() called.
klips_debug:ipsec_device_event: NETDEV_GOING_DOWN dev=ipsec0
klips_debug:ipsec_device_event: NETDEV_DOWN dev=ipsec0 flags=80
klips_debug:ipsec_tunnel_ioctl: tncfg service call #35313 for dev=ipsec0
klips_debug:ipsec_tunnel_ioctl: calling ipsec_tunnel_detatch.
klips_debug:ipsec_tunnel_detach: physical device eth1 being detached from virtual device ipsec0
klips_debug:pfkey_create: sock=0pDEADF00D type:3 state:1 flags:0 protocol:2
klips_debug:pfkey_create: sock->fasync_list=0pDEADF00D sk->sleep=0pDEADF00D.
klips_debug:pfkey_insert_socket: sk=0pDEADF00D
klips_debug:pfkey_list_insert_socket: allocating 8 bytes for socketp=0pDEADF00D
klips_debug:pfkey_create: Socket sock=0pDEADF00D sk=0pDEADF00D initialised.
klips_debug:pfkey_sendmsg: .
klips_debug:pfkey_sendmsg: allocating 72 bytes for downward message.
klips_debug:pfkey_sendmsg: msg sent for parsing.
klips_debug:pfkey_msg_interp: parsing message ver=2, type=16, errno=0, satype=0(UNKNOWN), len=9, res=0, seq=1, pid=987.
klips_debug:ipsec_SAref_alloc: SAref requested... head=12, cont=256, tail=255, listsize=256.
klips_debug:ipsec_SAref_alloc: allocating SAref=12, table=0, entry=12 of 65536.
klips_debug:ipsec_sa_alloc: allocated 528 bytes for ipsec_sa struct=0pDEADF00D ref=12.
klips_debug:pfkey_msg_interp: allocated extr->ips=0pDEADF00D.
klips_debug:pfkey_msg_parse: parsing message ver=2, type=16(x-debug), errno=0, satype=0(UNKNOWN), len=9, res=0, seq=1, pid=987.
klips_debug:pfkey_msg_parse: remain=7, ext_type=25(X-set-debug), ext_len=7.
klips_debug:pfkey_msg_parse: extensions permitted=02000001, required=02000001.
klips_debug:pfkey_msg_parse: parsing ext type=25(X-set-debug) remain=7.
klips_debug:pfkey_msg_parse: remain=7 ext_type=25(X-set-debug) ext_len=7 parsing ext 0pDEADF00D with parser pfkey_x_ext_debug_parse.
klips_debug:pfkey_x_debug_parse: enter
klips_debug:pfkey_msg_parse: Extension 25(X-set-debug) parsed.
klips_debug:pfkey_msg_parse: extensions permitted=02000001, seen=02000001, required=02000001.
klips_debug:pfkey_msg_interp: processing ext 25 0pDEADF00D with processor 0pDEADF00D.
klips_debug:pfkey_x_debug_process: .
klips_debug:pfkey_x_debug_process: unset

