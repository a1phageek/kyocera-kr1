<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<HTML><HEAD><TITLE>GoAhead WebServer 2.1.4 Release Notes</TITLE>
<!-- $Id: release.htm,v 1.1.1.1 2003/08/27 06:20:15 rupert Exp $ -->
<style>
<!--
BODY {FONT-FAMILY: Arial, Helvetica, sans-serif; FONT-SIZE: 9pt}
P {COLOR: #333333; FONT-FAMILY: Arial, Helvetica, sans-serif; FONT-SIZE: 9pt; MARGIN-LEFT: 10px}
H1 {COLOR: #0066cc; FONT-FAMILY: Arial, Helvetica, sans-serif; FONT-SIZE: 14pt; FONT-WEIGHT: bold; MARGIN-LEFT: 10px}
H2 {COLOR: #0066cc; FONT-FAMILY: Arial, Helvetica, sans-serif; FONT-SIZE: 12pt; FONT-WEIGHT: bold; MARGIN-LEFT: 10px}
H3 {COLOR: #0066cc; FONT-FAMILY: Arial, Helvetica, sans-serif; FONT-SIZE: 10pt; FONT-WEIGHT: bold; MARGIN-LEFT: 10px}
PRE {BACKGROUND-COLOR: #eeeeee; COLOR: #0a0a8c; FONT-FAMILY: "Courier New", Courier, mono; FONT-SIZE: 9pt; LINE-HEIGHT: normal; MARGIN-LEFT: 10px; PADDING-BOTTOM: 5px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; PADDING-TOP: 5px}
TD {COLOR: #333333; FONT-FAMILY: Arial, Helvetica, sans-serif; FONT-SIZE: 9pt}
TABLE {MARGIN-LEFT: 10px}
OL {COLOR: #333333; FONT-FAMILY: Arial, Helvetica, sans-serif; FONT-SIZE: 9pt; MARGIN-LEFT: 40px}
UL {COLOR: #333333; FONT-FAMILY: Arial, Helvetica, sans-serif; FONT-SIZE: 9pt; MARGIN-LEFT: 30px}
H4 {COLOR: #0066cc; FONT-FAMILY: Arial, Helvetica, sans-serif; FONT-SIZE: 9pt; FONT-WEIGHT: bold; MARGIN-LEFT: 10px}
-->
</style>
</HEAD>
<BODY bgColor=#ffffff>
 
<H1> GoAhead® WebServer 2.1.4 Release Notes </H1>
      
<P><B>Release Date:</B> 17 Oct 2002<BR>
  <B>File: </B>release.htm<BR>
  <B>Part Number:</B> 1-53-03</P>
      <H2>1. What's New in This Release?<A name=what></A> </H2>
      
<BLOCKQUOTE> 
  <UL>
    <LI><a href="#bugs">Bug Fixes </a></LI>
  </UL>
</BLOCKQUOTE>
<h2><font face="Arial, Helvetica, sans-serif">2. Bug Fixes for Version 2.1.4<a name=bugs></a></font> </h2>
<BLOCKQUOTE>
  <p><b>Fixed vulnerability to malicious code in webs.c<b></p>
  <blockquote>
    <p><b>Summary</b>:<br>
    There were two vulnerabilities in <tt>webs.c</tt>. Sending a POST message
    with a content-length but no data resulted in an attempt to perform a
    <tt>strlen()</tt> on a NULL pointer (thanks to Richard Cullen). Also, sending an HTTP POST message
    with a Content-Length header indicating that the length of the posted data
    was less than zero would crash the server (thanks to Auriemma Luigi).

    <p><b>Fix</b>:<br>
      Code errors corrected.
    
   </blockquote>

  <p><b>https:// bug in security handler<b></p>
  <blockquote>
    <p><b>Summary</b>:<br>
    The <tt>websSecurityHandler()</tt> function was performing a logical OR:
    (flags | WEBS_SECURE) instead of a logical AND (flags &amp; WEBS_SECURE),
    leading to incorrect results (thanks to "Dhanwa T").

    <p><b>Fix</b>:<br>
      Code errors corrected.
    
   </blockquote>

  <p><b>Fixed vulnerability to malicious code in sockGen.c<b></p>
  <blockquote>
    <p><b>Summary</b>:<br>
    At line 613 of <tt>sockGen.c</tt>, the return value of the function
    <tt>socketInputBuffered()</tt> was being discarded, leading to incorrect
    behavior in some cases. (Thanks to Richard Cullen)

    <p><b>Fix</b>:<br>
      Code errors corrected.
    
   </blockquote>
</BLOCKQUOTE>
<h2><font face="Arial, Helvetica, sans-serif">3. Bug Fixes for Version 2.1.3</a></font> </h2>
<BLOCKQUOTE> 

  <p><b>Directory Traversal Exploit <b></p>
  <blockquote>
    <p><b>Summary</b>:<br>
      Several sources have reported that requesting an URL with URL-encoded
      backslashes (%5C) allow accessing files located outside the server's
      designated web root. This should only have been possible on Windows, as
      URL-encoded forward slashes (%2F) were already being handled correctly.

    <p><b>Fix</b>:<br>
      Modified <tt>default.c</tt> so that any backslash characters created as
      part of decoding the URL string are converted (in place) to forward
      slashes. The pre-existing directory-traversal detection code then
      rejects the bad URL as expected.
    
   </blockquote>
  <p><b>MIME type for external JavaScript files <b></p>
  <blockquote>
    <p><b>Summary</b>:<br>
      The WebServer would not serve external JavaScript files (<tt>*.js</tt>)
      correctly.


    <p><b>Fix</b>:<br>
    modified <tt>mime.c</tt> to associate <tt>.js</tt> files with the MIME
    type <tt>application/x-javascript</tt>.
   </blockquote>
   
  <p><b> Bug in If-Modified-Since parsing<b></p>
  <blockquote>
    <p><b>Summary</b>:<br>
      There was an off-by-one error when converting from Gregorian date to
      time_t. 

    <p><b>Fix</b>:<br>
    modified function <tt>dateToTimet</tt> in file <tt>webs.c</tt>.
      The 'month' parameter is numbered from  0 (Jan == 0), but
      FixedFromGregorian() takes months numbered from 1 (January ==
      1). We need to add 1 to the month before calling FixedFromGregorian.

   </blockquote>
</BLOCKQUOTE>

   
<h2><font face="Arial, Helvetica, sans-serif">4. Bug Fixes for Version 2.1.2 
</font> </h2>
<BLOCKQUOTE> 

  <p><b> Ejscript Error Messages <b></p>
  <blockquote>
    <p><b>Summary</b>:<br>

      Changed ejEval() function so it displays in the browser the error string that is 
      reported by the ejScript interpreter (old code discarded it completely).

    <p><b>Fix</b>:<br>
    modified <tt>websuemf.c</tt>
   </blockquote>

  <p><b> Security Handler Response Codes <b></p>
  <blockquote>
    <p><b>Summary</b>:<br>
      Several places in the <tt>websSecurityHandler()</tt> function were
      returning error code 200 (success) instead of the correct 400-level error code.
    <p><b>Fix</b>:<br>
      Corrected error codes in <tt>security.c</tt>
   </blockquote>
  <p><b> Security Handler Memory Leak <b></p>
  <blockquote>
    <p><b>Summary</b>:<br>
      In <tt>websSecurityHandler()</tt>, if the WebServer was compiled with
      <tt>WEBS_SSL_SUPPORT</tt> enabled, there was a return path that leaked
      memory.

    <p><b>Fix</b>:<br>
      Added call to <tt>bfree(B_L, accessLimit);</tt>
   </blockquote>
  <p><b> Ejscript Write Corruption <b></p>
  <blockquote>
    <p><b>Summary</b>:<br>
      Very long text strings passed to the Ejscript <tt>write()</tt> function
      were being corrupted before being displayed.
    <p><b>Fix</b>:<br>
      Commented out a <tt>trace()</tt> statement in <tt>ejGetLexToken()</tt>that appears to have been the
      culprit. The value of <tt>ep->token</tt> was being corrupted somewhere
      in the trace.
   </blockquote>
  <p><b> Error in dsnprintf(): "%X" format <b></p>
  <blockquote>
    <p><b>Summary</b>:<br>
      The "%X" format specifier did not correctly cause the function to output
      uppercase hexadecimal digits.
    <p><b>Fix</b>:<br>
      Added support for the "%X" format specifier.
   </blockquote>
  <p><b> BUG018565 Re-fixed <b></p>
  <blockquote>
    <p><b>Summary</b>:<br>
      See 2.1.1 release notes (below). This bug fix did not make it into the
      2.1.1 release.
      
    <p><b>Fix</b>:<br>
      Corrected code in <tt>sockGen.c</tt>.
   </blockquote>
  <p><b> Potential Error in error() <b></p>
  <blockquote>
    <p><b>Summary</b>:<br>
      If <tt>error()</tt> is called where the etype parameter is not E_LOG, E_ASSERT, 
      or E_USER, the call to <tt>bfreeSafe(B_L, buf)</tt> now at line 71 will fail, 
      because 'buf' is randomly  initialized. 

    <p><b>Fix</b>:<br>
      We format a message saying that this is an unknown message type, 
      and in doing so give buf a valid value.    
    </blockquote>

  <p><b> Added Support For Customized Access Control <b></p>
  <blockquote>
    <p><b>Summary</b>:<br>
      Several users requested a method to control URL access in a hierarchical
      fashion. For example, users assigned to an 'admin' group might have
      access to all URLs on the WebServer, and users assigned to the group
      'technician' would have access to a smaller set of pages, and users
      assigned to the group 'users' would perhaps only have access to a set of
      read-only pages. The built-in WebServer access control system only
      allows users to access URLs that exactly match their group membership. 
    <p><b>Fix</b>:<br>
      Added call to a user-supplied function <tt> bool_t dmfCanAccess(const
      char_t* userGroup, const char_t* group)</tt>. This function is called
      from inside <tt>umUserCanAccessURL()</tt> if the macro
      <tt>qHierarchicalAccess</tt> is defined. 
   </blockquote>
   

  <p><b> Memory Leak in websParseRequest() <b></p>
  <blockquote>
    <p><b>Summary</b>:<br>
      Memory was being leaked in the code now at line 907 of <tt>webs.c</tt>.

    <p><b>Fix</b>:<br>
      Added a call to <tt>bfree()</tt>.
   </blockquote>
</BLOCKQUOTE>
<h2><font face="Arial, Helvetica, sans-serif">5. Macintosh OS X Support  <a 
name=macosx></a></font> </h2>
<blockquote>
   <p>A separate Mac OS X platform directory has been added, and this platform
   has been tested on version 10.1.5 of the operating system.</p>
   <p>To build the WebServer on OS X:</p>
</blockquote>
<blockquote>
<pre>
cd MACOSX
make
</pre>
</blockquote>
<blockquote>
   <p>Note that like all *nix operating systems, only the root user has
   permission to open a server port with a lower number than 1024. You must
   run the WebServer as root to serve pages over port 80, or change the server
   port (in main.c) to a different port (typically port 8080).
   </p>
</blockquote>   


<h2><font face="Arial, Helvetica, sans-serif">6. Bug Fixes for Version 2.1.1</font> </h2>
<BLOCKQUOTE> 
  <p><b> Intermittent Access Error for CGI Scripts (BUG01937)</b></p>
  <blockquote> 
    <p><b>Summary</b>:<br>
      Pages were occasionally replaced with the message, &quot;Access Error: Data 
      follows when trying to obtain CGI generated no output&quot;. </p>
    <p><b>Fix</b>:<br>
      On multiple CPU systems, it is possible for a CGI application to exit before 
      its output is flushed to disk. The change for this release locates the code 
      that collects the output from the CGI application in a separate routine. 
      In addition to calling that routine from within the CGI application processing 
      loop, it is also called in a brief loop after the CGI application has exited. 
      This extra loop runs for only up to one second while the collected output 
      remains empty. If, after 1 second, the output remains empty, the original 
      course of action is followed (&quot;Access Error&quot; is reported).</p>
  </blockquote>
  <p><br>
    <b>CPU Utilization Hangs at 100% on a Socket Disconnect (BUG01865)</b></p>
  <blockquote> 
    <p><b>Summary:</b><br>
      This error occurs whenever a user terminates a request before the server 
      has had ample time to service it. This can be simulated by quickly hitting 
      the refresh button on the browser twice in a row, causing the first request 
      to be terminated. The server then enters into a tight loop that utilizes 
      all of its time.</p>
    <p><b>Fix:</b><br>
      Always close the socket prior to a disconnect.</p>
  </blockquote>
  <p><br>
    <b>Security Features can be Bypassed by Adding an Extra Slash in the URL (BUG01518)</b></p>
  <blockquote> 
    <p><b>Summary</b>:<br>
      By adding an extra slash in a URL, password prompting is bypassed, allowing 
      unrestricted access to secured pages. </p>
    <p><b>Fix</b>:<br>
      Remove multiple adjacent occurrences of slashes in the URL before passing 
      it to the security handler.</p>
  </blockquote>
  <p><br>
    <b>Call to websSetVar causes a crash (BUG01938)</b></p>
  <blockquote> 
    <p><b>Summary</b>:<br>
      Whenever a request is not completed while being processed by websGetInput(), 
      a call to websDone is made, followed by an attempt to process the partial 
      request data.</p>
    <p><b>Fix</b>:<br>
      Return immediately after closing the socket.</p>
  </blockquote>
  <p><br>
    <b>Remove stray semicolon in emfdb.c (BUG01820)</b></p>
  <blockquote>
    <p><b>Summary and Fix</b>:<br>
      A stray semicolon was removed from this file.</p>
  </blockquote>
</BLOCKQUOTE>
<h2><font face="Arial, Helvetica, sans-serif">7. Novell Netware Support<a 
name=novell></a></font> </h2>
<blockquote> 
  <p> With the addition of Novell Netware in this 2.11 release, WebServer now 
    supports these platforms:</p>
  <UL>
    <LI>LINUX</LI>
    <LI> LynxOS</LI>
    <LI><b><font face="Arial, Helvetica, sans-serif">Novell Netware </font>4.2, 
      5.1</b></LI>
    <LI>Mac OS X</LI>
    <LI>UNIX - SCO OpenServer 3.2V5.0.0</LI>
    <LI>VxWorks 5.3.1</LI>
    <LI>Windows 2000</LI>
    <LI>Windows 98</LI>
    <LI>Windows 95 </LI>
    <LI>Windows NT</LI>
    <LI>Windows CE</LI>
  </UL>
  <h3>To make a Novell Netware target file (webs.nlm):<font face="Arial"><strong> 
    </strong></font></h3>
</blockquote>
<blockquote>
  <PRE>
cd NW
wmake webs.nlm
load &lt;path&gt; \webs.nlm
webs</PRE>
  <p><b>Note:</b> This makefile lacks a valid default rule. In addition, an environment 
    variable (QMKVER) controls the amount of debug information that is compiled 
    and linked into the nlm file. If this variable is set to &quot;P&quot;, it 
    produces a production version. All other settings (or the omission of the 
    variable) results in a debug version.</p>
  <p> For other platforms supported by WebServer, please refer to your WebServer 
    2.1 documentation for appropriate instructions. </p>
  </blockquote>
<h2>8. Copyright Information </h2>
<blockquote> 
  <H3>Trademarks </H3>
  <p>GoAhead and GoAhead WebServer are registered trademarks of GoAhead Software. 
    All other brand or product names are the trademarks or registered trademarks 
    of their respective holders. </p>
  <H3>Copyright </H3>
  <p>Copyright © 2000, 2001 GoAhead Software, Inc. All rights reserved. </p>
  <p>Product and technical information in this document is subject to change without 
    notice and does not represent a commitment on the part of GoAhead Software, 
    Inc. </p>
  <H3>Copy Restrictions </H3>
  <p>The software described in this document may be used and copied only in accordance 
    with the terms of the accompanying license agreement. </p>
  <p>GoAhead Software, Inc. <BR>
    10900 NE 8th Street<BR>
    Suite 750 <BR>
    Bellevue, WA 98004 <BR>
    +1 ( 425) 453-1900 <BR>
    www.goahead.com <BR>
    info@goahead.com </p>
  <p>1-53-03</p>
</blockquote>
<P>&nbsp;</P><P>&nbsp;</P><P>&nbsp;</P><P>&nbsp;</P><P>&nbsp;</P><P>&nbsp;</P><P>&nbsp;</P><P>&nbsp;</P><P>&nbsp; </P> 
</BODY></HTML>
