{\rtf1\ansi \deff0\deflang1033

{\fonttbl
{\f0\froman Times New Roman;}
{\f2\fswiss Arial;}
{\f19\fmodern\fcharset0\fprq1 Courier New;}
}

{\colortbl;
\red0\green0\blue0;
\red0\green0\blue255;
\red0\green255\blue255;
\red0\green255\blue0;
\red255\green0\blue255;
\red255\green0\blue0;
\red255\green255\blue0;
\red255\green255\blue255;
\red0\green0\blue127;
\red0\green127\blue127;
\red0\green127\blue0;
\red127\green0\blue127;
\red127\green0\blue0;
\red127\green127\blue0;
\red127\green127\blue127;
\red192\green192\blue192;
}


{\stylesheet
{\s243\li-1800\sl-210\tqr\tx6960 \b\f2\fs19\lang1033header;}
{\s251\sb160\sa40\sl-280\keepn \b\f2\lang1033heading 4;}
{\s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033heading 3;}
{\s253\li-1800\sb160\sa60\sl-380\keepn \b\f0\fs34\lang1033heading 2;}
{\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033heading 1;}
{\*\cs10 \additive Default Paragraph Font;}
{\sa160\sl240 \fs21\lang1033Normal;}
{\s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033Ex;}
{\s44\li-1770\ri30\sb50\sl-80\brdrt\brdrs\brdrw15\brdrcf2 \fs12\lang1033header rule;}
{\s45\li-1800\sa180\sl-440\keepn\tx0 \b\f2\fs40\up8\lang1033Rh1;}
{\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Rmh;}
{\s50\sl-240\keepn \f0\fs21\lang1033Term1;}
{\s53\li280\sl-240\keepn \f0\fs21\lang1033Term2;}
{\s54\li280\sa80\sl-240 \f0\fs21\lang1033Def1;}
{\s55\li560\sa80\sl-240 \f0\fs21\lang1033Def2;}
{\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033Rule;}
{\s93\sl240 \fs21\lang1033
Index Link;}
{\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25Table Text;}
}

\paperw12240\paperh15840\margl3330\margr1530\margt-2540\margb-2220\gutter420
\facingp\deftab280\widowctrl\ftnbj

\sectd \binfsxn1\binsxn1\linex0\headery1990\footery360\endnhere\titlepg

{\headerl \pard\plain\s243\li-1800\sl-210\tqr\tx6960 \b\f2\fs19\lang1033
{\field\flddirty{\*\fldinst PAGE}{\fldrslt 4}}{\expnd50  }Realtek Semiconductor Corp.   By cfliu@realtek.com.tw - 06/04/04\par
\pard\plain\s44\li-1770\ri30\sb50\sl-80\brdrt\brdrs\brdrw15\brdrcf2 \fs12\lang1033\par }

{\headerr \pard\plain\s243\li-1800\sl-210\tqr\tx6960 \b\f2\fs19\lang1033
\tab Realtek Semiconductor Corp.   By cfliu@realtek.com.tw - 06/04/04{\expnd50   }
{\field\flddirty{\*\fldinst PAGE}{\fldrslt 3}}
\par \pard\plain\s44\li-1770\ri30\sb50\sl-80\brdrt\brdrs\brdrw15\brdrcf2 \fs12\lang1033
\par }
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033Module rtl8651_tblDrv.c - RTL8651 Home gateway controller table driver API documentation\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Description\par
\pard\plain\sa160\sl240 \fs21\lang1033This document explains the internal and external API interface of the table driver module. Functions with _rtl8651 prefix 
are internal functions and functions with rtl8651_ prefix are external functions.\par
\pard\plain\sa160\sl240 \fs21\lang1033\par
\pard\plain\s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033List of Symbols\par
\pard\plain\sa160\sl240 \fs21\lang1033Here is a list of all functions and variables in this module.\par
\pard\plain\s93\sl240 \fs21\lang1033
\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_tblDrv.c - RTL8651 Home gateway controller table driver API documentation{\vrtl8651_tblDrv.c_.2d_RTL8651_Home_gateway_controller_table_driver_API_documentation}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_addAlgCtrlConnection{\v_rtl8651_addAlgCtrlConnection}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_addNaptConnection{\v_rtl8651_addNaptConnection}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_ageoutPPPoEPassthru{\v_rtl8651_ageoutPPPoEPassthru}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_delNaptConnection{\v_rtl8651_delNaptConnection}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_findNaptConnection{\v_rtl8651_findNaptConnection}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_findNaptConnectionByExtPort{\v_rtl8651_findNaptConnectionByExtPort}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_flushNaptConnection{\v_rtl8651_flushNaptConnection}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_getDefaultAcl{\v_rtl8651_getDefaultAcl}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_getInboundAlgCtrlFlow{\v_rtl8651_getInboundAlgCtrlFlow}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_getInboundNaptFlow{\v_rtl8651_getInboundNaptFlow}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_getNaptEntry{\v_rtl8651_getNaptEntry}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_getOutboundAlgCtrlFlow{\v_rtl8651_getOutboundAlgCtrlFlow}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_getOutboundNaptFlow{\v_rtl8651_getOutboundNaptFlow}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_getUsableExtIpAndPort{\v_rtl8651_getUsableExtIpAndPort}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_refillOrClearAsicNaptEntry{\v_rtl8651_refillOrClearAsicNaptEntry}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_refreshNaptConnectionAge{\v_rtl8651_refreshNaptConnectionAge}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_removeNaptConnectionByExtIP{\v_rtl8651_removeNaptConnectionByExtIP}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_removeNaptConnectionBySrcIP{\v_rtl8651_removeNaptConnectionBySrcIP}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_selectNaptPortOffset{\v_rtl8651_selectNaptPortOffset}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_setNaptEntry{\v_rtl8651_setNaptEntry}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_setPPPoEPassthruTimeout{\v_rtl8651_setPPPoEPassthruTimeout}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_softwareNaptAging{\v_rtl8651_softwareNaptAging}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_swapNaptEntryToAsic{\v_rtl8651_swapNaptEntryToAsic}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_swapNaptEntryToAsic{\v_rtl8651_swapNaptEntryToAsic_1}\par

\pard\plain\s93\sl240 \fs21\lang1033
_rtl8651_updateNaptConnection{\v_rtl8651_updateNaptConnection}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addAclRule{\vrtl8651_addAclRule}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addAclRuleByIndexing{\vrtl8651_addAclRuleByIndexing}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addALGRule{\vrtl8651_addALGRule}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addArp{\vrtl8651_addArp}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addDemandRoute{\vrtl8651_addDemandRoute}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addDmzHost{\vrtl8651_addDmzHost}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addExtNetworkInterface{\vrtl8651_addExtNetworkInterface}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addIpIntf{\vrtl8651_addIpIntf}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addIpIntf{\vrtl8651_addIpIntf_1}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addIpUnnumbered{\vrtl8651_addIpUnnumbered}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addLocalServer{\vrtl8651_addLocalServer}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addMacAccessControl{\vrtl8651_addMacAccessControl}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addNaptConnection{\vrtl8651_addNaptConnection}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addNaptIcmpFlow{\vrtl8651_addNaptIcmpFlow}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addNaptMapping{\vrtl8651_addNaptMapping}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addNaptServerPortMapping{\vrtl8651_addNaptServerPortMapping}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addNaptServerPortRange{\vrtl8651_addNaptServerPortRange}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addNatMapping{\vrtl8651_addNatMapping}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addNetworkIntf{\vrtl8651_addNetworkIntf}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addPolicyBasedQoS{\vrtl8651_addPolicyBasedQoS}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addPolicyRoute{\vrtl8651_addPolicyRoute}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addPPPoEPassthru{\vrtl8651_addPPPoEPassthru}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addPppoeSession{\vrtl8651_addPppoeSession}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addProtocolBasedNAT{\vrtl8651_addProtocolBasedNAT}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addRoute{\vrtl8651_addRoute}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addSession{\vrtl8651_addSession}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addURLFilterRule{\vrtl8651_addURLFilterRule}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_addURLfilterString{\vrtl8651_addURLfilterString}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_bindPppoeSession{\vrtl8651_bindPppoeSession}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_bindSession{\vrtl8651_bindSession}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delAclRule{\vrtl8651_delAclRule}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delAclRuleByIndexing{\vrtl8651_delAclRuleByIndexing}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delALGRule{\vrtl8651_delALGRule}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delArp{\vrtl8651_delArp}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delDmzHost{\vrtl8651_delDmzHost}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delExtNetworkInterface{\vrtl8651_delExtNetworkInterface}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delIpIntf{\vrtl8651_delIpIntf}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delIpIntf{\vrtl8651_delIpIntf_1}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delIpUnnumbered{\vrtl8651_delIpUnnumbered}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delLocalServer{\vrtl8651_delLocalServer}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delMacAccessControl{\vrtl8651_delMacAccessControl}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delNaptConnection{\vrtl8651_delNaptConnection}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delNaptIcmpFlow{\vrtl8651_delNaptIcmpFlow}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delNaptMapping{\vrtl8651_delNaptMapping}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delNaptServerPortMapping{\vrtl8651_delNaptServerPortMapping}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delNaptServerPortRange{\vrtl8651_delNaptServerPortRange}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delNatMapping{\vrtl8651_delNatMapping}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delNetworkIntf{\vrtl8651_delNetworkIntf}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delPolicyBasedQoS{\vrtl8651_delPolicyBasedQoS}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delPPPoEPassthru{\vrtl8651_delPPPoEPassthru}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delPppoeSession{\vrtl8651_delPppoeSession}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delProtocolBasedNAT{\vrtl8651_delProtocolBasedNAT}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delRoute{\vrtl8651_delRoute}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delSession{\vrtl8651_delSession}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delURLFilterRule{\vrtl8651_delURLFilterRule}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_delURLfilterString{\vrtl8651_delURLfilterString}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_enableLogging{\vrtl8651_enableLogging}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_enableMacAccessControl{\vrtl8651_enableMacAccessControl}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_EnableProtocolBasedNAT{\vrtl8651_EnableProtocolBasedNAT}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_enableSmartNaptCreate{\vrtl8651_enableSmartNaptCreate}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_flushAclRule{\vrtl8651_flushAclRule}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_flushAllNaptConnections{\vrtl8651_flushAllNaptConnections}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_flushDemandRoute{\vrtl8651_flushDemandRoute}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_flushMacAccessControl{\vrtl8651_flushMacAccessControl}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_flushPolicyBasedQoS{\vrtl8651_flushPolicyBasedQoS}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_flushPolicyRoute{\vrtl8651_flushPolicyRoute}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_getInboundProtocolBasedNAT{\vrtl8651_getInboundProtocolBasedNAT}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_getIpUnnumbered{\vrtl8651_getIpUnnumbered}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_getNaptInsideGlobalIpAddr{\vrtl8651_getNaptInsideGlobalIpAddr}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_getOutboundProtocolBasedNAT( uint8 protocol, ipaddr_t *ExtIp, ipaddr_t IntIp )\par
\{{\vrtl8651_getOutboundProtocolBasedNAT.28_uint8_protocol.2c_ipaddr_t_.2aExtIp.2c_ipaddr_t_IntIp_.29.a.7b}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_getPPPoEPassthru{\vrtl8651_getPPPoEPassthru}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_getPppoeSessionMac{\vrtl8651_getPppoeSessionMac}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_getSessionMac{\vrtl8651_getSessionMac}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_initURLfilter{\vrtl8651_initURLfilter}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_installLoggingFunction{\vrtl8651_installLoggingFunction}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_removeNetworkIntfLinkLayerType{\vrtl8651_removeNetworkIntfLinkLayerType}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_resetL2tpProperty{\vrtl8651_resetL2tpProperty}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_resetPppoeSessionProperty{\vrtl8651_resetPppoeSessionProperty}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_resetPptpProperty{\vrtl8651_resetPptpProperty}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_setArpAgingTime{\vrtl8651_setArpAgingTime}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_setDefaultAcl{\vrtl8651_setDefaultAcl}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_setFlowControl{\vrtl8651_setFlowControl}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_setL2tpProperty{\vrtl8651_setL2tpProperty}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_setLanSideExternalIpInterface{\vrtl8651_setLanSideExternalIpInterface}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_setMacAccessControlDefaultPermit{\vrtl8651_setMacAccessControlDefaultPermit}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_setNaptIcmpTimeout{\vrtl8651_setNaptIcmpTimeout}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_setNaptTcpFastTimeout{\vrtl8651_setNaptTcpFastTimeout}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_setNaptTcpLongTimeout{\vrtl8651_setNaptTcpLongTimeout}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_setNaptTcpMediumTimeout{\vrtl8651_setNaptTcpMediumTimeout}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_setNaptTcpUdpPortRange{\vrtl8651_setNaptTcpUdpPortRange}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_setNaptUdpTimeout{\vrtl8651_setNaptUdpTimeout}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_setPortPriorityQueue{\vrtl8651_setPortPriorityQueue}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_setPppoeSessionHangUp{\vrtl8651_setPppoeSessionHangUp}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_setPppoeSessionProperty{\vrtl8651_setPppoeSessionProperty}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_setPptpProperty{\vrtl8651_setPptpProperty}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_setQueueScheduling{\vrtl8651_setQueueScheduling}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_specifyNetworkIntfLinkLayerType{\vrtl8651_specifyNetworkIntfLinkLayerType}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_tblDrvInit{\vrtl8651_tblDrvInit}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_timeUpdate{\vrtl8651_timeUpdate}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_updateAsicIcmpTable{\vrtl8651_updateAsicIcmpTable}\par

\pard\plain\s93\sl240 \fs21\lang1033
rtl8651_updateAsicNaptTable{\vrtl8651_updateAsicNaptTable}\par

\par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_addAlgCtrlConnection\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b rtl8651_tblDrv_naptTcpUdpFlowEntry_s  *} {\b _rtl8651_addAlgCtrlConnection(}{\b int8} {\i forced}{\b , int8} {\i flowType}{\b , ipaddr_t} {\i intIP}{\b , uint16} {\i intPort}{\b , ipaddr_t *} {\i extIP}{\b , uint16\tab*} {\i extPort}{\b , ipaddr_t} {\i dstIP}{\b , uint16} {\i dstPort}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Internal use only. Add a ALG connection to software table.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i forced}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Use the external IP and port selected by caller.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i flowType}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Type of connections adding. Possible values: UDP_FLOW, TCP_LISTEN_FLOW, TCP_OUTBOUND_SYN_RCVD_FLOW, TCP_INBOUND_SYN_RCVD_FLOW, TCP_ESTABLISHED_FLOW.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i intIP}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal IP.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i intPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal Port.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i extIP}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033placeholder for returned External IP\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i extPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033placeholder for returned External port.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i dstIP}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination IP\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i dstPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination port\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033For some NAPT flows such as ftp control channel, the forwarding engine takes care of all their traffic. 
Hence it is no need to write such flows into ASIC. 
Returned {\i extIP} & {\i extIP} derived from classic hashing algorithm\par

Function name implies this is only for ALG. Connection added by this function doesn't affect the collision bit of NAPT table. 
This means user should set ALG table to trap packets of added ALG connections. ASIC NAPT table is not responsible for 
trapping them.\par

Deletion of added ALG flow relies on software aging mechanism. No specific API for ALG NAPT flow deletion\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 Non-NULL\cell ALG connection added to software table.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 NULL\cell Failed to add a new ALG connection.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_addNaptConnection\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int8} {\b _rtl8651_addNaptConnection(}{\b int8} {\i fromDrv}{\b , int8} {\i assigned}{\b , int8} {\i flowType}{\b , ipaddr_t} {\i intIP}{\b , uint16} {\i intPort}{\b , ipaddr_t *} {\i extIP}{\b , uint16\tab*} {\i extPort}{\b , ipaddr_t} {\i dstIP}{\b , uint16} {\i dstPort}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Internal function only. Add a NAPT connection to software table or ASIC, depends on the extPort selected and/or hash algorithm used.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Value\par\pard\plain\sa160\sl240 \fs21\lang1033Returns SUCCESS if connection added successfully. Returns one of the following eroor codes when error occured.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i fromDrv}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE if requested from forwarding engine. FALSE if requested from user protocol stack.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i assigned}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE if {\i extIP} and {\i extPort} already assigned. FALSE if {\i extIP} and {\i extPort} can be selected freely by driver.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i flowType}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Type of connections adding. Possible values: UDP_FLOW, TCP_LISTEN_FLOW, TCP_OUTBOUND_SYN_RCVD_FLOW, TCP_INBOUND_SYN_RCVD_FLOW, TCP_ESTABLISHED_FLOW.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i intIP}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal IP.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i intPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal Port.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i extIP}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033External IP. If {\i assigned} is TRUE, {\i *extIP} must not be NULL.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i extPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033External port.  If {\i assigned} is FALSE, {\i *extIP} must not be NULL.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i dstIP}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination IP\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i dstPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination port\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033This internal function adds a new NAPT connection into table driver. Driver uses both calculated hash keys to determine which ASIC hash algorithm to use. 
No matter {\i extIp} and {\i extPort}\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOTINTIP\cell internal IP {\i intIP} does not belong to any of the configured network interfaces.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EDSTIPISLS\cell Destination IP {\i dstIP} belongs to a configured local server. should use routing not NAPT.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOTEXTIP\cell External IP address {\i extIP} given is not one of the configured WAN IPs.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOFREEBUF\cell Out of buffer space. Can't add any more.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDEXTPORT\cell External port {\i extPort} given already inuse.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EDRVNAPTEXIST\cell Connection already exists.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOTPERMIT\cell Assigned external IP, port pair doesn't match with hash result. Forbid this new entry add.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EGETOFFSETFAIL\cell Can't allocate a valid offset value when selecting a {\i extPort}.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_ageoutPPPoEPassthru\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b _rtl8651_ageoutPPPoEPassthru(void}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033traversal PPPoE table to clear aged session.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033\par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_delNaptConnection\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b _rtl8651_delNaptConnection(}{\b rtl8651_tblDrv_naptTcpUdpFlowEntry_t *} {\i delEntry}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Internal use only. Delete an NAPT connection.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i delEntry}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033pointer to the Connection to be deleted.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Delete an NAPT connection. If either or both directions of the flows of this connection has been written into ASIC, 
clear it(them). Don't try to refill with candidate connections. Let maintenance thread do the job.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell NAPT connection successfully deleted.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 FAILED\cell Failed to delete NAPT connection.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_findNaptConnection\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b rtl8651_tblDrv_naptTcpUdpFlowEntry_t *} {\b _rtl8651_findNaptConnection(}{\b uint32} {\i tblIndex}{\b , int8} {\i isTcp}{\b , ipaddr_t} {\i insideLocalIpAddr}{\b , uint16} {\i insideLocalPort}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Table driver internal use. Given local IP, local port and protocol, find whether there already exists a outbound flow with these 3 tuples in software table.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i tblIndex}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033NAPT entry index calculated from hash algorithm selected.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i isTcp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE for TCP, FALSE for UDP\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i insideLocalIpAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033{\i *entry} pointers to the temp sotrage provided by caller. If entry already cached in softare, {\i *entry}, on return, points to that cached connection. Otherwise, caller's temp storage is used to save entry read from ASIC.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i insideLocalPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Don't read from cache. Read from ASIC directly\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Table driver internal use. Given local IP, local port and protocol, find whether there already exists a connection with these 3 tuples in software table.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 Non-NULL\cell \cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033\cf6 Developer Notes\par\pard\plain\sa160\sl240 \fs21\lang1033\cf6 Calculated hash result {\i tblIndex} is always used for outbound flow. 
Search only in the outbound list of {\i tblIndex}-th NAPT line.\par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_findNaptConnectionByExtPort\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b rtl8651_tblDrv_naptTcpUdpFlowEntry_t *} {\b _rtl8651_findNaptConnectionByExtPort(}{\b int8} {\i isTcp}{\b , uint16} {\i extPort}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Internal use only. Table driver internal use. Given external port and protocol, find whether this port number already inuse in software.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i isTcp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE for TCP, FALSE for UDP.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i extPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033The external port searching for.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Table driver internal use. Given external port and protocol, find whether this port number already inuse in software.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 Non-NULL\cell Port alrady in use. Returns the connection pointer.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 NULL\cell Port NOT inuse. No connection found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_flushNaptConnection\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b _rtl8651_flushNaptConnection(void}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Internal use only. Flush all TCP/UDP/ICMP NAPT connections\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Delete ALL ICMP/UDP/TCP NAPT connections currently in table.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Always returns SUCCESS.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_getDefaultAcl\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b _rtl8651_getDefaultAcl(}{\b int8} {\i ifName}{\b , int8} {\i defAction}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Get default ACL rule action. If all rule is mismatch, the default rule will alway be matched.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network interface name.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i defAction}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033The default action. It would be the following values: RTL8651_ACL_CPU(If mismatch, trap packet to CPU), RTL8651_ACL_DROP(if mismatch, drop packet), RTL8651_ACL_PERMIT(if mismatch, permit packet).\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Get the specified network interface's ACL to PERMIT, DROP or toCPU if rule mismatch. Note: If no ACL rule in the ACL table, default action always PERMIT. Once any ACL rule was added, the user-configure default action will work.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The ACL default action was set successfully.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDINPUT\cell Unknown default action type or specified network interface is NULL.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETIFNAME\cell The specified network interface name was not found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_getInboundAlgCtrlFlow\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b _rtl8651_getInboundAlgCtrlFlow(}{\b int8} {\i isTcp}{\b , ipaddr_t} {\i gip}{\b , uint16} {\i gport}{\b , ipaddr_t} {\i dip}{\b , uint16} {\i dport}{\b , struct rtl8651_tblDrv_naptTcpUdpFlowEntry_s **} {\i ppEntry}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033For forwarding engine. Given 5 tuples in inbound packet, find and return the inbound NAPT flow pointer from software table.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i isTcp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE for TCP, FALSE for UDP.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i gip}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination IP in inbound packet. It's one of the gateway's IP.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i gport}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination port in inbound packet. It's the gateway selected external port.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i dip}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Source IP in inbound packet.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i dport}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Source port in inbound packet.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ppEntry}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033pointer to a temp storage from caller\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Given 5 tuples of an ALG inbound packet, check and get if connection exists. 
{\i *ppEntry} should already points to an struct {\i rtl8651_tblDrv_naptTcpUdpFlowEntry_s} instacnce prepared by caller. 
If we found the connection in question in table driver,  {\i *ppntry} returns and points to that  connection address 
If we found the entry in ASIC, then caller's entry instance storage is used to save this temporary snapshot information. Note that entry read from ASIC WON'T be cached in software table.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell NAPT flow found.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYNOTFOUND\cell Flow not found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_getInboundNaptFlow\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b _rtl8651_getInboundNaptFlow(}{\b int8} {\i isTcp}{\b , ipaddr_t} {\i gip}{\b , uint16} {\i gport}{\b , ipaddr_t} {\i dip}{\b , uint16} {\i dport}{\b , struct rtl8651_tblDrv_naptTcpUdpFlowEntry_s **} {\i ppEntry}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033For forwarding engine. Given 5 tuples in inbound packet, find and return the inbound NAPT flow pointer from software table or ASIC.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i isTcp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE for TCP, FALSE for UDP.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i gip}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination IP in inbound packet. It's one of the gateway's IP.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i gport}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination port in inbound packet. It's the gateway selected external port.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i dip}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Source IP in inbound packet.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i dport}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Source port in inbound packet.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ppEntry}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033pointer to a temp storage from caller\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Given 5 tuples of an inbound packet, check and get if connection exists. 
{\i *ppEntry} should already points to an struct {\i rtl8651_tblDrv_naptTcpUdpFlowEntry_s} instacnce prepared by caller. 
If we found the connection in question in table driver,  {\i *ppntry} returns and points to that  connection address 
If we found the entry in ASIC, then caller's entry instance storage is used to save this temporary snapshot information. Note that entry read from ASIC WON'T be cached in software table. 
If flow not exists on both ASIC and table driver, *ppEntry=NULL is returned.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell NAPT flow found.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYNOTFOUND\cell Flow not found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_getNaptEntry\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b _rtl8651_getNaptEntry(}{\b uint16} {\i tblIndex}{\b , rtl8651DrvNaptLine_t *} {\i naptLine}{\b , rtl8651_tblDrv_naptTcpUdpFlowEntry_t **} {\i entry}{\b , int8} {\i direct}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Table driver internal use. Read an entry from ASIC or from ASIC cache. If {\i dontcache} is TRUE, read directly from ASIC.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i tblIndex}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033NAPT entry index.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i naptLine}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Pointer to #{\i tblIndex}-th NAPT line.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i entry}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033{\i *entry} pointers to the temp sotrage provided by caller. If entry already cached in softare, {\i *entry}, on return, points to that cached connection. Otherwise, caller's temp storage is used to save entry read from ASIC.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i direct}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Don't read from cache. Read from ASIC directly\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Read entry from ASIC cache. If cache misses or {\i direct} is TRUE, read directly from ASIC.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Always returns success\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033\cf6 Developer Notes\par\pard\plain\sa160\sl240 \fs21\lang1033\cf6 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_getOutboundAlgCtrlFlow\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b _rtl8651_getOutboundAlgCtrlFlow(}{\b int8} {\i isTcp}{\b , ipaddr_t} {\i sip}{\b , uint16} {\i sport}{\b , ipaddr_t} {\i dip}{\b , uint16} {\i dport}{\b , struct rtl8651_tblDrv_naptTcpUdpFlowEntry_s **} {\i ppEntry}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033For forwarding engine. Given 5 tuples in outbound packet, find and return the ALG control flow pointer from software table.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i isTcp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE for TCP, FALSE for UDP.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sip}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal IP\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sport}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal port\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i dip}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination IP\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i dport}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination port\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ppEntry}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033pointer to a temp storage from caller\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Given 5 tuples from ALG outbound packet, find and get ALG control flow from software table if connection exists. 
ppEntry should points to an rtl8651_tblDrv_naptTcpUdpFlowEntry_s instacnce on caller's stack. 
If we found the ALG flow in question is in table driver,  *ppEntry, on return,points to that flow inside table driver. 
If the ALG flow doesn't not exists, *ppEntry=NULL is returned.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell ALG control flow found.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYNOTFOUND\cell Flow not found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_getOutboundNaptFlow\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b _rtl8651_getOutboundNaptFlow(}{\b int8} {\i isTcp}{\b , ipaddr_t} {\i sip}{\b , uint16} {\i sport}{\b , ipaddr_t} {\i dip}{\b , uint16} {\i dport}{\b , struct rtl8651_tblDrv_naptTcpUdpFlowEntry_s **} {\i ppEntry}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033For forwarding engine. Given 5 tuples in outbound packet, find and return the NAPT flow pointer from software table or ASIC.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i isTcp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE for TCP, FALSE for UDP.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sip}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal IP\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sport}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal port\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i dip}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination IP\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i dport}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination port\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ppEntry}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033pointer to a temp storage from caller\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Given 5 tuples from output packet, find and get NAPT flow from software table or ASIC if connection exists. 
ppEntry should points to an rtl8651_tblDrv_naptTcpUdpFlowEntry_s instacnce on caller's stack. 
If we found the flow in question in table driver,  *ppEntry, on return,points to that flow inside table driver. 
If we found the flow directly from ASIC, then *ppEntry is used to saveASIC snapshot. 
If flow not exists on both ASIC and table driver, *ppEntry=NULL is returned.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell NAPT flow found.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYNOTFOUND\cell Flow not found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_getUsableExtIpAndPort\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int8} {\b _rtl8651_getUsableExtIpAndPort(}{\b int8} {\i isTcp}{\b , ipaddr_t} {\i internalIP}{\b , uint16} {\i internalPort}{\b , ipaddr_t} {\i destIP}{\b , uint16} {\i destPort}{\b , ipaddr_t *} {\i extIp}{\b , uint16 *} {\i extPort}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Given 5 connection tuples, let driver selects a pair of external IP address and port.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i isTcp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE for TCP, FALSE for UDP.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i internalIP}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal IP.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i internalPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal Port.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i destIP}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal IP.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i destPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal Port.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i extIp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination IP.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i extPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination Port.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Given 5 tuples, let driver select a  pair of external  IP and port to use in NAPT. 
If {\i destIP} and {\i destPort} are both zero, selecte {\i extIp} and {\i extPort} based on 8651B's liberal hash algorithm, otherwise, 
use classic hash algoirithm. Notice that the {\i extPort} returned is NOT reserved for caller. The same port number may also be selected by other callers until it is added to software NAPT table.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell A pair of {\i extIp} and {\i extPort} selected.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 FAILED\cell Failed to select either {\i extIp} or {\i extPort}.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033\cf6 Developer Notes\par\pard\plain\sa160\sl240 \fs21\lang1033\cf6 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_refillOrClearAsicNaptEntry\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b void} {\b _rtl8651_refillOrClearAsicNaptEntry(}{\b ipaddr_t} {\i sip}{\b , struct rtl8651_tblDrv_naptTcpUdpFlowEntry_s *} {\i selectedRefillFlow}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Internal use only. Pick a candidate flow for napt line number {\i tblIdx}. If no candidates pickable, reinitialize this ASIC entry.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Value\par\pard\plain\sa160\sl240 \fs21\lang1033{\i _rtl8651_refillOrClearAsicNaptEntry()} has no return value.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sip}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033The internal source IP. All connections originated from this host would be deleted.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i selectedRefillFlow}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033selected flow to refill.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Refill this ASIC entry with a connection selected from driver table. When selecting a candidate flow, prefer inbound flows than outbound flows since inbound flows are usually download links. 
If there are no more pending connections, reset the ASIC entry. This function assumes 
ASIC entry IS INDEED UNUSED. Caller should check this before using this API.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033\cf6 Developer Notes\par\pard\plain\sa160\sl240 \fs21\lang1033\cf6 The preference bias for inbound flow may need to configurable on a per napt line basis.\par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_refreshNaptConnectionAge\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b _rtl8651_refreshNaptConnectionAge(void}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Internal use only. Refresh all TCP/UDP/ICMP NAPT connections max aging time.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Reset aging time of all ICMP/UDP/TCP NAPT connections in software and ASIC. If remaining aging timer longer than given max value, 
set to given max age time..\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Always returns SUCCESS.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_removeNaptConnectionByExtIP\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b void} {\b _rtl8651_removeNaptConnectionByExtIP(}{\b ipaddr_t} {\i sip}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Internal use only. Flush all NAPT connections with {\i sip} as internal IP.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Value\par\pard\plain\sa160\sl240 \fs21\lang1033{\i _rtl8651_removeNaptConnectionByExtIP()} has no return value.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sip}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033The internal source IP. All connections originated from this host would be deleted.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Given a internal IP {\i sip}, remove all NAPT connections originated from this host. 
This would traverse whole software table and also ASIC NAPT table exactly once.\par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_removeNaptConnectionBySrcIP\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b void} {\b _rtl8651_removeNaptConnectionBySrcIP(}{\b ipaddr_t} {\i sip}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Internal use only. Flush all NAPT connections with {\i sip} as internal IP.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Value\par\pard\plain\sa160\sl240 \fs21\lang1033{\i _rtl8651_removeNaptConnectionBySrcIP()} has no return value.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sip}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033The internal source IP. All connections originated from this host would be deleted.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Given a internal IP {\i sip}, remove all NAPT connections originated from this host. 
This would traverse whole software table and also ASIC NAPT table exactly once.\par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_selectNaptPortOffset\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b _rtl8651_selectNaptPortOffset(}{\b uint32} {\i tblIdx}{\b , uint16 *} {\i offset}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Internal use only. Pick a vacant offset value on given NAPT entry.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i tblIdx}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Entry index of NAPT table\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i offset}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Placeholder for selected offset value on return.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Given entry index {\i tblIdx}, find a unused, available offset for the MSB 6 bits of external port number. 
offset values in both ASIC and software table are excluded.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell A vacant offset value was found and returned via {\i *offset}.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 FAILED\cell All offset values inuse.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033\cf6 Developer Notes\par\pard\plain\sa160\sl240 \fs21\lang1033\cf6 External port number 0 is NEVER used nor returned by this function.\par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_setNaptEntry\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b _rtl8651_setNaptEntry(}{\b uint16} {\i tblIndex}{\b , rtl8651DrvNaptLine_t *} {\i naptLine}{\b , rtl8651_tblDrv_naptTcpUdpFlowEntry_t *} {\i entry}{\b , int8} {\i statusUpdate}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Table driver internal use. Given 5 tuples in outbound packet, find and return the NAPT flow pointer from software table or ASIC.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i tblIndex}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033NAPT entry index.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i naptLine}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Pointer to #{\i tblIndex}-th NAPT line.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i entry}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Pointer to the entry to be written to ASIC. If {\i NULL}, the entry is to be deleted.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i statusUpdate}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033When {\i entry} is NULL, TRUE to sync information between ASIC and software table. False to delete ASIC entry.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033This function is provided for three purposes: 
1. If {\i entry} is not NULL,{\i statusUpdate} is TRUE, then "force" write content in {\i entry} to ASIC cache line {\i naptLine} whose table index is {\i tblIndex}. 
2. If {\i entry} is not NULL,{\i statusUpdate} is FALSE, then "soft" write content in {\i entry} to ASIC cache line {\i naptLine} whose table index is {\i tblIndex}. connection written to ASIC is static entry and also cached in software. 
2. If {\i entry} is NULL and {\i statusUpdate} is TRUE, then status information between ASIC and software table is synchronized. (collision,autolearn check bits got updated.) 
3. If {\i entry} is NULL and {\i statusUpdate} is FALSE, this ASIC entry content is cleared.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell NAPT entry set successfully.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 FAILED\cell failed to set NAPT entry.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033\cf6 Developer Notes\par\pard\plain\sa160\sl240 \fs21\lang1033\cf6 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_setPPPoEPassthruTimeout\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b _rtl8651_setPPPoEPassthruTimeout(}{\b uint32} {\i timeout}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033traversal PPPoE table to clear aged session.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i timeout}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033unit: seconds\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 uint32\cell previous timeout value\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_softwareNaptAging\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b void} {\b _rtl8651_softwareNaptAging(}{\b uint32} {\i secPassed}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Housekeeping function. Retire expired software connections.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Value\par\pard\plain\sa160\sl240 \fs21\lang1033{\i _rtl8651_softwareNaptAging()} has no return value.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i secPassed}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033time passed (in seconds) since last call.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Scan all inuse NAPT flows, retire aged out flows. 
If smart flow swapping is enabled, software flows which can be accelerated by ASIC would be swapped to ASIC if their arriving rate faster than predefined threshold value.\par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_swapNaptEntryToAsic\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b void} {\b _rtl8651_swapNaptEntryToAsic(}{\b struct rtl8651_tblDrv_naptTcpUdpFlowEntry_s *} {\i thisFlow}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Swap heavy load software connection to ASIC.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i thisFlow}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033NAPT connection selected to replace ASIC entry\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033User may use {\i _rtl8651_naptSmartFlowSwapByPPS} function to turn n built in NAPT smart swapping feature. 
The NAPT smart swapping feature is useful when multiple connections hashed to same ASIC table entry(ie. hash collision) but only one of them can be accelerated by ASIC. 
If among all the collided connections there exists a heavy load one, user can define a threshold value(pkt/sec) using {\i _rtl8651_naptSmartFlowSwapByPPS} to tell driver when to swap the 
heavy load connection to ASIC and accelerate its forwarding rate.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell {\i thisFlow} successfully swapped to ASIC.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 FAILED\cell {\i thisFlow} failed to replace ASIC entry and remains in software table.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033\cf6 Developer Notes\par\pard\plain\sa160\sl240 \fs21\lang1033\cf6 Only connections queued in candidate list can be accelerated. Pure software flows can't be accelerated this way.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033See Also\par\pard\plain\sa160\sl240 \fs21\lang1033{\i _rtl8651_naptSmartFlowSwapByPPS}\par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_swapNaptEntryToAsic\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b _rtl8651_swapNaptEntryToAsic(}{\b struct rtl8651_tblDrv_naptTcpUdpFlowEntry_s *} {\i thisFlow}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Swap heavy load software connection to ASIC.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i thisFlow}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033NAPT connection selected to replace ASIC entry\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033User may use {\i _rtl8651_naptSmartFlowSwapByPPS} function to turn n built in NAPT smart swapping feature. 
The NAPT smart swapping feature is useful when multiple connections hashed to same ASIC table entry(ie. hash collision) but only one of them can be accelerated by ASIC. 
If among all the collided connections there exists a heavy load one, user can define a threshold value(pkt/sec) using {\i _rtl8651_naptSmartFlowSwapByPPS} to tell driver when to swap the 
heavy load connection to ASIC and accelerate its forwarding rate.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell {\i thisFlow} successfully swapped to ASIC.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 FAILED\cell {\i thisFlow} failed to replace ASIC entry and remains in software table.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033\cf6 Developer Notes\par\pard\plain\sa160\sl240 \fs21\lang1033\cf6 Only connections queued in candidate list can be accelerated. Pure software flows can't be accelerated this way.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033See Also\par\pard\plain\sa160\sl240 \fs21\lang1033{\i _rtl8651_naptSmartFlowSwapByPPS}\par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033_rtl8651_updateNaptConnection\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b _rtl8651_updateNaptConnection(}{\b struct rtl8651_tblDrv_naptTcpUdpFlowEntry_s *} {\i drvEntry}{\b , int32} {\i newTcpState}{\b , uint32} {\i newAge}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Update flow status to driver table and write back to ASIC, if occupied, right away.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i drvEntry}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033pointer to a already created connection in driver's table\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i newTcpState}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033new state of this TCP connection. leave it=0 if it's UDP.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i newAge}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033new aging timer value of this connection\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Update flow status and last received timestamp with driver table. and if it occupies ASIC, write back to ASIC immediately.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell New status info updated.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 FAILED\cell Failed.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addAclRule\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addAclRule(}{\b int8 *} {\i ifName}{\b , int8} {\i Ingress}{\b , rtl8651_tblDrvAclRule_t *} {\i rule}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Add an ACL rule in ACL STACK Mode.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network interface name.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i Ingress}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE for Ingress rule and FALSE for Egress rule.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i rule}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033ACL rule.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Add a new ACL rule from the tail of the specified network interface's ACL rule. The RTL8651 supports two ACL operation modes - STACK Mode & Indexing Mode. 
These two modes cannot coexist in the system. Hence if the current operatoin mode is Indexing mode, the API will return fail.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell An ACL rule was successfully added.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EACLRULEISNULL\cell The specified ACL rule is NULL.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALACTIONTYPE\cell Unknown ACL rule action type.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EACLMODEISNOTALLOWED\cell The current ACL operation mode is not STACK Mode.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOFREEBUFFER\cell Out of memory buffer.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETIFNAME\cell The specified network interface name was not found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addAclRuleByIndexing\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addAclRuleByIndexing(}{\b uint16} {\i rIdx}{\b , int8 *} {\i ifName}{\b , int8} {\i Ingress}{\b , rtl8651_tblDrvAclRule_t *} {\i rule}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Add an ACL rule by specifying rule ID.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i rIdx}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Rule ID.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network interface name.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i Ingress}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE for Ingress rule and FALSE for Egress rule.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i rule}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033ACL rule.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033According to the ACL rule indexing to add a ACL rule. The RTL8651 supports two ACL operation modes - STACK Mode and Indexing Mode. 
These two modes cannot coexist in the system. Hence if the current ACL operation mode is not Index mode, this API 
will forbid the rule to be added.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell An ACL rule was successfully added.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EACLRULEISNULL\cell The specified ACL rule is NULL.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALACTIONTYPE\cell Unknown ACL action type.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EACLMODEISNOTALLOWED\cell Current ACL operation mode is not Indexing Mode.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYALREADYEXIST\cell Rule ID already exists.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOFREEBUFFER\cell Out of memory buffer.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addALGRule\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addALGRule(}{\b uint16} {\i startPort}{\b , uint16} {\i endPort}{\b , int8} {\i isTcp}{\b , int8} {\i isServer}{\b , int8} {\i isClient}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Add a ALG port or port range to ASIC ALG Table.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i startPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033start port number in the specified port range.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i endPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033ending port number in the specified port range.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i isTcp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE is for TCP Protocol, FALSE is for UDP Protocol.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i isServer}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033If the ALG rule is used for Server, TRUE is specified.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i isClient}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033If the ALG rule is used for Client, TRUE is specified.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Protocol Stack can add a ALG rule to trap packets which their L4 port number matchs the added ALG rule.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell A ALG Rule was added successfully.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALALGATTR\cell Neither Server nor Client was specified to an entry.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALPORTRANGE\cell Invalid port range was specified.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYALREADYEXIST\cell ALG rule already exists.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EALGPORTRANGEOVERLAP\cell The new ALG rule overlaps the port range of the one already in existence.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOFREEBUFFER\cell Out of ALG rule buffer.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addArp\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addArp(}{\b ipaddr_t} {\i ipAddr}{\b , ether_addr_t *} {\i macAddr}{\b , int8 *} {\i ifName}{\b , uint32} {\i port}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Add an ARP entry.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ipAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i macAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Pointer to MAC address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network interface name.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i port}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Physical port number.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell An Arp entry was successfully added.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETIFNAME\cell The specified network interface was not found.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOFREEBUFFER\cell Out of memory buffer.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENONBROADCASTNET\cell Non Broadcast network is forbidden to add ARP entry.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EARPALREADYEXIST\cell ARP entry already exists.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EARPCANNOTADDL2ENTRY\cell The L2 Entry cannot be added.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOIPINTFFOUND\cell The specified IP interface was not found.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDINPUT\cell Invalid Input parameter.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addDemandRoute\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b uint32} {\b rtl8651_addDemandRoute(}{\b rtl8651_tblDrvPolicyRoute_t *} {\i rtAdd}{\b , int} {\i identity}{\b , int32 (*)(uint32)} {\i p_callBack}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033add demand route entry\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i rtAdd}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033demand route entry\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i identity}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033pppoe Object Id\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i p_callBack}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Call back function.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Add A Demand Route Entry\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The Entry is added successfully.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 RTENTRY_FOUND\cell The Entry is already existed.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 RTENTRY_FULL\cell The Entry is already existed.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addDmzHost\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addDmzHost(}{\b ipaddr_t} {\i naptIp}{\b , ipaddr_t} {\i dmzHostIp}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Add a DMZ host.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i naptIp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033External NAPT IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i dmzHostIp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Private host IP address.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Only one DMZ host is allowed in whole system and the DMZ host should be bound with NAPT IP address.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The DMZ host was added successfully.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EDMZHOSTNEEDNAPTIP\cell The specified external IP addresss should be a NAPT IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EDMZHOSTSHOULDBEINTIP\cell The specified DMZ host IP address should be an internal IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EDMZHOSTCANNOTBEGWIP\cell The specified DMZ host IP address should not be gateway's IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYALREADYEXIST\cell The DMZ host already exists.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addExtNetworkInterface\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addExtNetworkInterface(}{\b int8 *} {\i ifName}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Change an internal network interface to external network interface.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network interface name.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The specified network interface was successfully changed to external interface.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENAPTSTART\cell Can not add the specified network itnerface to external network itnerface because the NAPT is running.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETIFNAME\cell Invalid network interface name.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENETIFALREADYEXTERNAL\cell The specified network interface already is an external interface.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOFREEBUFFER\cell Out of memory buffer.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addIpIntf\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addIpIntf(}{\b int8 *} {\i ifName}{\b , ipaddr_t} {\i ipAddr}{\b , ipaddr_t} {\i ipMask}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Add an IP interface to a network interface.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network interface name.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ipAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Specify Gateway IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ipMask}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Specify network mask.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Besides adding an IP interface to a specified netwrok interface, the {\i rtl8651_addIpIntf()} also specifies the Gateway IP address 
for the network interface. The Gateway IP address is specified by {\i ipAddr} parameter and the network mask is derived from the logical 
AND of {\i ipAddr} and {\i ipMask}.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell An IP interface was successfully added.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENETMASKCANNOTBEZERO\cell The netmask of IP interface cannot be zero.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETIFNAME\cell Invalid network interface name.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EUNKNOWLINKLAYERTYPE\cell The specified network interface has no link-layer type specified.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOFREEBUFFER\cell Out of memory buffer.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EIPUNEXTIFCANNOTHASHIPINTF\cell Cannot attach IP interface to External Network itnerface in an IP Unnumbered network.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EIPIFALREADYEXIST\cell The specified IP interface already exists.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETMASK\cell Invalid network mask. The specified netmask may be 0xffffffff in a VLAN type network.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addIpIntf\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addIpIntf(}{\b int8 *} {\i ifName}{\b , ipaddr_t} {\i ipAddr}{\b , ipaddr_t} {\i ipMask}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Add an IP interface to a network interface.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network interface name.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ipAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Specify Gateway IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ipMask}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Specify network mask.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Besides adding an IP interface to a specified netwrok interface, the {\i rtl8651_addIpIntf()} also specifies the Gateway IP address 
for the network interface. The Gateway IP address is specified by {\i ipAddr} parameter and the network mask is derived from the logical 
AND of {\i ipAddr} and {\i ipMask}.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell An IP interface was successfully added.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENETMASKCANNOTBEZERO\cell The netmask of IP interface cannot be zero.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETIFNAME\cell Invalid network interface name.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EUNKNOWLINKLAYERTYPE\cell The specified network interface has no link-layer type specified.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOFREEBUFFER\cell Out of memory buffer.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EIPUNEXTIFCANNOTHASHIPINTF\cell Cannot attach IP interface to External Network itnerface in an IP Unnumbered network.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EIPIFALREADYEXIST\cell The specified IP interface already exists.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETMASK\cell Invalid network mask. The specified netmask may be 0xffffffff in a VLAN type network.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addIpUnnumbered\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addIpUnnumbered(}{\b int8 *} {\i wanIfName}{\b , int8 *} {\i lanIfName}{\b , ipaddr_t} {\i netMask}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Set a network itnerface to be IP Unnumbered network.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i wanIfName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033WAN network itnerface name.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i lanIfName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033LAN network interface name.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i netMask}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network Mask.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033When configure IP Unnumbered network, an external network interface and an internal network interface should be prepared. The external network 
interface type should be PPPoE and the internal network interface type should be VLAN. Meanwhile, the external network interface cannot have any 
IP interface attached.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDINPUT\cell Invalid input parameter. Either {\i wanIfName} is NULL or netmask=0xffffffff.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EONLYONEIPUNNUMBERISALLOWED\cell The whole system only allows one IP Unnumbered network.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_NETIFTYPENOTMATCH\cell The external network interface should be PPPoE type and internal network itnerface should be VLAN type.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENETIFINVALID\cell {\i wanIfName} should be an external interface and {\i lanIfName} should be an internal interface.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EWANIFCANNOTHAVEIPINTF\cell When set IP Unnumebred network, the external network interface cannot have IP interface attached.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETIFNAME\cell Invalid network interface name.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EEXTINTFSHOULDBEPPPOE\cell The specified external network interface should be PPPoE type.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ESHOULDBEEXTNETIF\cell The {\i wanIfName} should be external network interface.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addLocalServer\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addLocalServer(}{\b ipaddr_t} {\i ipAddr}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Add a local server.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ipAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Local Server IP address. It should be an external\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDLSIPADDR\cell Invlaid Local Server IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ELSCANNOTBEGWIP\cell Local Server IP address cannot be gateway's IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ELSALREADYEXISTS\cell The specified local server already exists.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOFREEBUFFER\cell Out of memory buffer.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addMacAccessControl\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addMacAccessControl(}{\b ether_addr_t *} {\i sMac}{\b , ether_addr_t *} {\i macMask}{\b , int8} {\i isPermit}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Add a MAC Filtering rule.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sMac}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Pointer to a MAC Address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i macMask}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Pointer to MAC Address Mask.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i isPermit}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE: if match the rule, permit the packet, FALSE: if match the rule, drop the packet.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Add a new MAC Filtering rule. Whether a  rule match or not depends on the following rule: 
(pkt.srcMac & macMask) == sMac 
Note that this API only provides source MAC address filtering.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOFREEBUFFER\cell Out of memory.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success API call.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addNaptConnection\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addNaptConnection(}{\b int8} {\i assigned}{\b , int8} {\i flowType}{\b , ipaddr_t} {\i intIP}{\b , uint16} {\i intPort}{\b , ipaddr_t *} {\i extIP}{\b , uint16\tab*} {\i extPort}{\b , ipaddr_t} {\i dstIP}{\b , uint16} {\i dstPort}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Add a NAPT connection.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Value\par\pard\plain\sa160\sl240 \fs21\lang1033Returns SUCCESS if connection added successfully. Returns one of the following eroor codes when error occured.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i assigned}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE if {\i extIP} and {\i extPort} already assigned. FALSE if {\i extIP} and {\i extPort} can be selected freely by driver.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i flowType}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Type of connections adding. Possible values: UDP_FLOW, TCP_LISTEN_FLOW, TCP_OUTBOUND_SYN_RCVD_FLOW, TCP_INBOUND_SYN_RCVD_FLOW, TCP_ESTABLISHED_FLOW.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i intIP}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal IP.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i intPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal Port.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i extIP}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033External IP. If {\i assigned} is TRUE, {\i *extIP} must not be NULL.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i extPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033External port.  If {\i assigned} is FALSE, {\i *extIP} must not be NULL.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i dstIP}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination IP\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i dstPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination port\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Exported function to write a new NAPT entry for 3rd party protocol stack or control protocols such as UPnP. 
This function adds a new NAPT connection into table driver. Table driver would try to write it into ASIC whenever possible. 
CAUTION: Connections, once successfully added, never released by table driver. Caller MUST use {\i rtl8651_delNaptConnection()} to delete the connection.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOTINTIP\cell internal IP {\i intIP} does not belong to any of the configured network interfaces.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EDSTIPISLS\cell Destination IP {\i dstIP} belongs to a configured local server. should use routing not NAPT.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOTEXTIP\cell External IP address {\i extIP} given is not one of the configured WAN IPs.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOFREEBUFFER\cell Out of buffer space. Can't add any more.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EDRVNAPTEXIST\cell Connection already exists.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOTPERMIT\cell Assigned external IP, port pair doesn't match with hash result. Forbid this new entry add.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EGETOFFSETFAIL\cell Can't allocate a valid offset value when selecting a {\i extPort}.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addNaptIcmpFlow\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addNaptIcmpFlow(}{\b int8} {\i assigned}{\b , ipaddr_t} {\i insideLocalIpAddr}{\b , uint16} {\i insideLocalId}{\b , ipaddr_t *} {\i insideGlobalIpAddr}{\b , uint16 *} {\i insideGlobalId}{\b , ipaddr_t} {\i dstIpAddr}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Create a NAPT ICMP flow.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i assigned}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033See comments.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i insideLocalIpAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Local(pricate) IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i insideLocalId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Local ICMP ID.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i insideGlobalIpAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033If {\i assigned} is FALSE, this parameter is assigned an External IP address selected by table driver. If is TRUE, the External IP address is selected by users and will force table driver uses user-assigned IP address as external IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i insideGlobalId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033If {\i assigned} is FALSE, this parameter is assigned an External Port number by table driver. If is TRUE, the External Port number is selected by users and will force table driver uses user-assigned Port number as external Port number.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i dstIpAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination IP address.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033The {\i rtl8651_addNaptIcmpFlow()} creates a ICMP entry in the ASIC ICMP table. It provides two configuration for use. One is that uses do not care the External IP and External Port selection. Hence the parameter {\i assigned} can be set to FALSE 
to let table driver auto select. Another is that uses select External IP and External Port by themself. Hence {\i assigned} can be set to TRUE to prevent from table driver auto selection.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell A new NAPT ICMP entry was created successfully.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDINPUT\cell Invalid input parameter.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVEXTIP\cell No valid external IP address found.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOTINTIP\cell Specified internal IP address doesn't belong to internal interface.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOTEXTIP\cell Specified external IP address doesn't belong to external interface.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EDSTIPISLS\cell NAPT DST IP is Local Server.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYALREADYEXIST\cell The specified entry already exists.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EEXTIDINUSE\cell NAPT ICMP external ID is in use.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOFREEBUFFER\cell Out of memory buffer.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addNaptMapping\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addNaptMapping(}{\b ipaddr_t} {\i extIpAddr}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Add a NAPT IP address.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i extIpAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033External IP address.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Currently, the RTL8651 only supports one NAPT IP address.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENAPTIPNOTEXTIP\cell The specified IP address is not an external IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENAPTIPCANNOTBENAT\cell The specified IP address is already a NAT IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOFREEBUFFER\cell Out of memory buffer.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addNaptServerPortMapping\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addNaptServerPortMapping(}{\b uint8} {\i isTcp}{\b , ipaddr} {\i extIp}{\b , int16} {\i extPort}{\b , ipaddr} {\i intIp}{\b , int16} {\i intPort}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Add a server port mapping.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i isTcp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE for TCP protocol, FALSE for UDP protocol.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i extIp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033External NAPT IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i extPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033The start external port number.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i intIp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i intPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033The start internal port number.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The specified napt server port mapping was removed successfully.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOTEXTIP\cell The specified external IP address is not external NAPT IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOTINTIP\cell The specified internal IP address is not internal private IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ERANGEOVERLAP\cell The specified port rang overlaps the existing one.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOFREEBUFFER\cell Out of free space.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addNaptServerPortRange\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addNaptServerPortRange(}{\b uint32} {\i SessionID}{\b , uint8} {\i isTcp}{\b , ipaddr} {\i extIp}{\b , int16} {\i extPort}{\b , ipaddr} {\i intIp}{\b , int16} {\i intPort}{\b , int16} {\i nCount}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Add a ranged server port mapping.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i SessionID}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Session ID.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i isTcp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE for TCP protocol, FALSE for UDP protocol.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i extIp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033External NAPT IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i extPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033The start external port number.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i intIp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i intPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033The start internal port number.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i nCount}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033The number of mapping ports.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The specified napt server port mapping was removed successfully.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOTEXTIP\cell The specified external IP address is not external NAPT IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOTINTIP\cell The specified internal IP address is not internal private IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ERANGEOVERLAP\cell The specified port rang overlaps the existing one.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOFREEBUFFER\cell Out of free space.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addNatMapping\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addNatMapping(}{\b ipaddr_t} {\i extIpAddr}{\b , ipaddr_t} {\i intIpAddr}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Add a NAPT Mapping.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i extIpAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033External IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i intIpAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal IP address.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033RTL8651 supports multiple NAT configuration. Note that one NAT IP address only can map to one Internal IP address.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENATIPNOTEXTERNALIP\cell The specified NAT IP address is not an External IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENATIPNOTINTERNALIP\cell The specified NAT Internal IP is not an Internal IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EDUPLOCATENATIP\cell The specified NAT IP address already maps to an Internal IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENATIPCANNOTBENAPTIP\cell The specified NAT IP address cannot be a NAPT IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOFREEBUFFER\cell Out of memory buffer.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYALREADYEXIST\cell NAT pair already exists.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addNetworkIntf\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addNetworkIntf(}{\b int8 *} {\i ifName}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Add a network interface.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network interface name.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033At table driver initial time, the networkIntfTableSize parameter decides the number of allowable network interfaces. If exceeds the capability, 
an error number, TBLDRV_ENOFREEBUFFER will be returned. Note that the VLAN and Network interface are one-to-one maping. It is not allowed that 
more than one network interface attach to a VLAN.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell A netwrok interface was successfully added.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETIFNAME\cell Invalud network interface name.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOFREEBUFFER\cell Of of memory buffer.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addPolicyBasedQoS\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addPolicyBasedQoS(}{\b int8 *} {\i ifName}{\b , rtl8651_tblDrvPolicy_t *} {\i policy_t}{\b , int8} {\i highPriority}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Add a policy-based QoS.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network interface name.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i policy_t}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Policy rule.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i highPriority}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE: high priority, FALSE: low priority.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033If a packet match a rule added by this API, the packet will have high/low priority when send it to output queue.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success API call.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDINPUT\cell Invalid Input paramter.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYNOTFOUND\cell The specified entry was not found.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOFREEBUFFER\cell Out of memory.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addPolicyRoute\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addPolicyRoute(}{\b rtl8651_tblDrvPolicyRoute_t *} {\i rtAdd}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033add policy route entry\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i rtAdd}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033policy route entry\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Add A Policy Route Entry\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The Entry is added successfully.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 RTENTRY_FOUND\cell The Entry is already existed.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 RTENTRY_FULL\cell The Table is full.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addPPPoEPassthru\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addPPPoEPassthru(}{\b uint16} {\i sid}{\b , ether_addr_t} {\i *clientMac}{\b , ether_addr_t} {\i *serverMac}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Add a pppoe passthru session\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sid}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033session ID.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i *clientMac}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033PPPoE client MAC address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i *serverMac}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033PPPoE server MAC address.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell \cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addPppoeSession\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addPppoeSession(}{\b uint32} {\i pppoeId}{\b , uint16} {\i vid}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Create a PPPoE.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i pppoeId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033PPPoE ID.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i vid}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033VLAN ID.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell A PPPoE was added successfully.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDVLANID\cell Invalid VLAN ID.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EFORBIDPROMISCINPPPOE\cell If promiscuous mode was set, PPPoE cannot be created.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EVLANSHOULDBEPPPOE\cell The specified VLAN should be PPPoE Type.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EPPPOEALREADYEXISTS\cell The specified PPPoE already exists.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EOUTOFVLANMACADDR\cell Out of VLAN MAC address.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addProtocolBasedNAT\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addProtocolBasedNAT(}{\b uint8} {\i protocol}{\b , ipaddr_t} {\i ExtIp}{\b , ipaddr_t} {\i IntIp}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033add entry for protocol based NAT\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i protocol}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033IP protocol\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ExtIp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033External IP\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i IntIp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal IP\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell \cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addRoute\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addRoute(}{\b ipaddr_t} {\i ipAddr}{\b , ipaddr_t} {\i ipMask}{\b , int8 *} {\i ifName}{\b , ipaddr_t} {\i nextHop}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Add a routing entry.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ipAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination IP address or network address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ipMask}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network mask.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network interface name.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i nextHop}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Next hop IP address. Meaningful in Broadcast network.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033The {\i rtl8651_addRoute()} adds a routing entry to the routing table. If a route is to a PPPoE, the {\i nextHop} should be zero.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell A routing entry was successfully added.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETIFNAME\cell Invalid Network interface name.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOLLTYPESPECIFY\cell The network interface has no link layer type specified.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ERTALREADYEXIST\cell The routing entry already exists.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ERTINVALNEXTHOP\cell Invalid next hop.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOSESSIONALLOCATE\cell Need PPPoE session allocated.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOFREEBUFFER\cell Out of memory buffer.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addSession\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addSession(}{\b uint32} {\i type}{\b , uint32} {\i sessionId}{\b , int8 *} {\i ifName}{\b , uint16} {\i vid}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Add a session-based connection.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i type}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Only following types are allowed: RTL8651_PPPOE, RTL8651_PPTP, RTL8651_L2TP.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sessionId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Session ID.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network interface name.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i vid}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Vlan ID.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033This API is used to add a session-based connection such as PPPoE, PPTP, L2TP connection. Before dial-up a session-based connection, 
this API should be called to add a session to user-specified netwrok interface and VLAN.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ECANNOTUSETHISVID\cell The specified VLAN ID is already in use.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENEEDLOOPBACKSET\cell Need Loop Back port set for PPTP/L2TP.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDVLANID\cell Invalid VLAN ID.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETIFNAME\cell Invalid Netwrok Interface Name.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EFORBIDPROMISCINPPPOE\cell If promiscuous mode is enabled, Session cannot be added.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYALREADYEXIST\cell Duplicate Session ID assignment.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EUNKNOWLINKLAYERTYPE\cell Unknown network interface's link-layer type.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOFREEBUFFER\cell Out of memory.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ECANNOTMOVESESSION\cell Cannot move the specified session to another network interface.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EALREADYHAVESESSION\cell The specified netwrok interface already has session attached.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addURLFilterRule\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addURLFilterRule(}{\b uint32} {\i sessionId}{\b , int8 *} {\i string}{\b , int32} {\i strlen}{\b , ipaddr_t} {\i ip_start}{\b , ip_addr_t} {\i ip_end}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033add URL Filter Rule\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sessionId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Session ID.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i string}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033URL Filtering string.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i strlen}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033The length of URL Filtering string.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ip_start}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Specify IP Range. The starting IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ip_end}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Specify IP Range. The ending IP address.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Beside matching the specified URL string, this API also specify that packet's source IP address should in the user-specified 
IP Range.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDINPUT\cell The starting IP adress can not exceed ending IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOFREEBUFFER\cell Out of memory.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success API call.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_addURLfilterString\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_addURLfilterString(}{\b int8 *} {\i string}{\b , int32} {\i strlen}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Add filter string to filter database.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i string}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033String to be filtered.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i strlen}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033String length of string-to-be-filtered.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033strlen: NULL char NOT counted.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 FAILED\cell Not success.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_bindPppoeSession\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_bindPppoeSession(}{\b ipaddr_t} {\i ipaddr}{\b , uint32} {\i pppoeId}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Bind PPPoE Session and IP address.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ipaddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033PPPoE IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i pppoeId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033PPPoE ID.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033When a PPPoE dials up, a PPPoE IP address and PPPoE Session ID will be assigned by ISP. They should be bound together to Table Driver.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The PPPoE IP and Session ID were bound successfully.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDINPUT\cell Invalid input parameter.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_bindSession\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_bindSession(}{\b ipaddr_t} {\i ipAddr}{\b , uint32} {\i sessionId}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Bind a IP address with a session.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ipAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033IP address given by session dial-up.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sessionId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Session ID.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033When a session dial up, the session will be given a IP address by ISP, the IP address should be bound with the session through this API.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ESESSIONNOTFOUND\cell Session ID was not found.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDINPUT\cell Invalid Input parameter.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delAclRule\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delAclRule(}{\b int8 *} {\i ifName}{\b , int8} {\i Ingress}{\b , rtl8651_tblDrvAclRule_t *} {\i rule}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Remove an ACL rule when ACL operation mode is STACK mode.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network interface name.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i Ingress}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE for Ingress rule and FALSE for Egress rule.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i rule}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033ACL rule.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033According the ACL rule content to remove a rule. Currently the RTL8651 supports two ACL operation modes - STACK Mode and Indexing Mode. 
These two modes can not coexit in the system. If the current ACL operation mode is Indexing Mode, this API will return fail.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EACLRULEISNULL\cell The specified ACL rule is NULL.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EACLMODEISNOTALLOWED\cell The current ACL operation mode is not STACK Mode.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETIFNAME\cell Network interface name was not found.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYNOTFOUND\cell The specified ACL rule was not found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delAclRuleByIndexing\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delAclRuleByIndexing(}{\b uint16} {\i rIdx}{\b , int8 *} {\i ifName}{\b , int8} {\i Ingress}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Remove an ACL rule by specifying the rule ID.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i rIdx}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Rule ID.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network interface name.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i Ingress}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE for Ingress rule and FALSE for Egress rule.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Currently RTL8651 supports two ACL operation modes - STACK Mode and Indexing Mode. These two mode cannot coexist in the system.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The specified ACL rule was removed successfully.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EACLMODEISNOTALLOWED\cell The system ACL operates in STACK Mode, hence Indexing mode is disallowed.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETIFNAME\cell Network interface was not found.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYNOTFOUND\cell The specified ACL ID was not found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delALGRule\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delALGRule(}{\b uint16} {\i startPort}{\b , uint16} {\i endPort}{\b , int8} {\i isTcp}{\b , int8} {\i isServer}{\b , int8} {\i isClient}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Remove a ALG rule from ASIC ALG Table.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i startPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033start port number in the specified port range.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i endPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033ending port number in the specified port range.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i isTcp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE is for TCP Protocol, FALSE is for UDP Protocol.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i isServer}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033If the ALG rule is used for Server, TRUE is specified.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i isClient}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033If the ALG rule is used for Client, TRUE is specified.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033This API remove the specified ALG rule from ASIC ALG Table.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The specified ALG rule was removed from ASIC ALG Table successfully.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALALGATTR\cell Neither Server nor Client was specified to an ALG entry.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALPORTRANGE\cell Invalid port specified.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ERANGEOVERLAP\cell The new ALG rule overlaps the port range of the one already in existence.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYNOTFOUND\cell ALG rule not found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delArp\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delArp(}{\b ipaddr_t} {\i ipAddr}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Remove an arp entry.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ipAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033IP Address.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The specified arp entry was successfully removed.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYNOTFOUND\cell The specified ARP entry was not found.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENONBROADCASTNET\cell Non Boradcast network is forbidden to add ARP entry.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delDmzHost\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delDmzHost(}{\b ipaddr_t} {\i naptIp}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Remove DMZ host.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i naptIp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033External NAPT IP address.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The DMZ host was added successfully.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EDMZHOSTNOTFOUND\cell The specified NAPT IP address was not found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delExtNetworkInterface\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delExtNetworkInterface(}{\b int8 *} {\i ifName}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Change an External network interface to internal interface.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network interface name.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The specified external network itnerface was successfully changed to internal interface.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENAPTSTART\cell Can not change the specified network itnerface to internal network itnerface because the NAPT is running.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETIFNAME\cell Invalid network interface name.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ESHOULDBEEXTIF\cell The network interface should be an external network interface.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ESHOULDNOTDMZEXT\cell The network interface should not be a DMZ netwrok interface.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ELIPUNNUMBEREDNOTALLOW\cell The specified network itnerface cannot be IP Unnumbered network.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENETIFREFBYNATNAPT\cell The network interface is referenced by NAT or NAPT.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delIpIntf\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delIpIntf(}{\b int8 *} {\i ifName}{\b , ipaddr_t} {\i ipAddr}{\b , ipaddr_t} {\i ipMask}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Remove an IP interface from the specified network interface.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network interface name.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ipAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Specify Gateway IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ipMask}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Specify network mask.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033The {\i rtl8651_delIpIntf()} API removes an IP interface from the specified network interface. The {\i ipAddr} specifies Gateway IP address.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The specified IP interface was successfully removed form the network interface.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETIFNAME\cell Invalid network interface name.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ECANNOTREMOVEIPUNEXTIPINTF\cell Global IP interface of IP Unnumbered cannot be removed. Use rtl8651_setLanSideExternalIpInterface() first.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EIPINTFISREFERENCEDBYARP\cell IP interface is referenced by ARP entry. It cannot be removed.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EIPINTFISREFERENCEDBYLS\cell IP interface is referenced by Local Server. It cannot be removed.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EIPINTFISREFERENCEDBYRT\cell IP interface is referenced by routing entry. It cannot be removed.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EIPINTFISREFERENCEDNYNATNAPT\cell IP interface is referenced by NAT/NAPT. It cannot be removed.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOIPINTFFOUND\cell The specified IP interface was not found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delIpIntf\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delIpIntf(}{\b int8 *} {\i ifName}{\b , ipaddr_t} {\i ipAddr}{\b , ipaddr_t} {\i ipMask}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Remove an IP interface from the specified network interface.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network interface name.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ipAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Specify Gateway IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ipMask}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Specify network mask.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033The {\i rtl8651_delIpIntf()} API removes an IP interface from the specified network interface. The {\i ipAddr} specifies Gateway IP address.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The specified IP interface was successfully removed form the network interface.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETIFNAME\cell Invalid network interface name.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ECANNOTREMOVEIPUNEXTIPINTF\cell Global IP interface of IP Unnumbered cannot be removed. Use rtl8651_setLanSideExternalIpInterface() first.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EIPINTFISREFERENCEDBYARP\cell IP interface is referenced by ARP entry. It cannot be removed.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EIPINTFISREFERENCEDBYLS\cell IP interface is referenced by Local Server. It cannot be removed.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EIPINTFISREFERENCEDBYRT\cell IP interface is referenced by routing entry. It cannot be removed.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EIPINTFISREFERENCEDNYNATNAPT\cell IP interface is referenced by NAT/NAPT. It cannot be removed.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOIPINTFFOUND\cell The specified IP interface was not found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delIpUnnumbered\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delIpUnnumbered(}{\b int8 *} {\i wanIfName}{\b , int8 *} {\i lanIfName}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Remove IP Unnumbered network.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i wanIfName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033External Network interface of IP Unnumbered.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i lanIfName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal Netoork interface of IP Unnumbered.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Teh IP Unnumbered network was successfully removed.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDINPUT\cell The {\i wanIfName} cannot be NULL.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENETIFNEEDIPUNNUMBERED\cell The specified network interface should be IP Unnumbered.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 tBLDRV_EIPUNNUMBEREDHASHIPINTF\cell The IP Unnumebred stil has external IP interface attached. Hence forbid to remove it.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delLocalServer\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delLocalServer(}{\b ipaddr_t} {\i ipAddr}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Remove a local server.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ipAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Local Server IP address.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The Local Server was successfully removed.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDLSIPADDR\cell Invalid Local Server specified.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delMacAccessControl\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delMacAccessControl(}{\b int32} {\i rtl8651_delMacAccessControl}{\b , ether_addr_t *} {\i sMac}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Remove a MAC Filtering rule.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i rtl8651_delMacAccessControl}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033ether_addr_t *\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sMac}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033ether_addr_t *\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033The usage of {\i sMac} and {\i macMask} can be seen in the description of rtl8651_addMacAccessControl API.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success API call.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYNOTFOUND\cell The specified entry was not found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delNaptConnection\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delNaptConnection(}{\b int8} {\i isTcp}{\b , ipaddr_t} {\i intIP}{\b , uint16} {\i intPort}{\b , ipaddr_t} {\i dstIP}{\b , uint16} {\i dstPort}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Delete an NAPT connection.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Value\par\pard\plain\sa160\sl240 \fs21\lang1033Returns SUCCESS if connection deleted successfully. Returns one of the following eroor codes when error occured.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i isTcp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE for TCP, FALSE for non-TCP connection\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i intIP}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal IP.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i intPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal Port.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i dstIP}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination IP\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i dstPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination port\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033This function deletes an NAPT connection previously added by {\i rtl8651_addNaptConnection()}. 
All connections MUST be deleted using this function explicitly or the connection would never be freed even after connection terminated.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOTINTIP\cell internal IP {\i intIP} does not belong to any of the configured network interfaces.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EDSTIPISLS\cell Destination IP {\i dstIP} belongs to a configured local server. should use routing not NAPT.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYNOTFOUND\cell Connection not found inside table driver. Can't delete.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delNaptIcmpFlow\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delNaptIcmpFlow(}{\b ipaddr_t} {\i insideLocalIpAddr}{\b , uint16} {\i insideLocalId}{\b , ipaddr_t} {\i dstIpAddr}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Remove a NAPT ICMP entry.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i insideLocalIpAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Specify local(private) IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i insideLocalId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Specify local ICMP ID.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i dstIpAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination IP address.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell A NAPT ICMP entry was successfully removed.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOTINTIP\cell Specified internal IP address doesn't belong to internal interface.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EDSTIPISLS\cell NAPT DST IP is Local Server.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYNOTFOUND\cell The specified entry was not found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delNaptMapping\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delNaptMapping(}{\b ipaddr_t} {\i extIpAddr}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Remove a NAPT IP address.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i extIpAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033NAPT IP address.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Currently, RTL8651 only supports on NAPT IP address. If the NAPT IP address is removed, the system 
will have no NAPT capability.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENAPTIPNOTEXTIP\cell The specified IP address is not a NAPT IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYNOTFOUND\cell The specified NAPT IP address was not found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delNaptServerPortMapping\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delNaptServerPortMapping(}{\b uint32} {\i SessionID}{\b , uint8} {\i isTcp}{\b , ipaddr} {\i extIp}{\b , int16} {\i extPort}{\b , ipaddr} {\i intIp}{\b , int16} {\i intPort}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Remove a server port mapping.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i SessionID}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Session ID.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i isTcp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE for TCP protocol, FALSE for UDP protocol.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i extIp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033External NAPT IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i extPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033The start external port number.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i intIp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i intPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033The start internal port number.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The specified napt server port mapping was removed successfully.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOTEXTIP\cell The specified external IP address is not external NAPT IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOTINTIP\cell The specified internal IP address is not internal private IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYNOTFOUND\cell The specified napt server port mapping was not found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delNaptServerPortRange\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delNaptServerPortRange(}{\b uint32} {\i SessionID}{\b , uint8} {\i isTcp}{\b , ipaddr} {\i extIp}{\b , int16} {\i extPort}{\b , ipaddr} {\i intIp}{\b , int16} {\i intPort}{\b , int16} {\i nCount}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Remove a ranged server port mapping.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i SessionID}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Session ID.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i isTcp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE for TCP protocol, FALSE for UDP protocol.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i extIp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033External NAPT IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i extPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033The start external port number.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i intIp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i intPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033The start internal port number.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i nCount}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033The number of mapping ports.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The specified napt server port mapping was removed successfully.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOTEXTIP\cell The specified external IP address is not external NAPT IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOTINTIP\cell The specified internal IP address is not internal private IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYNOTFOUND\cell The specified napt server port mapping was not found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delNatMapping\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delNatMapping(}{\b ipaddr_t} {\i extip}{\b , ipaddr_t} {\i intip}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Remove a NAPT mapping.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i extip}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033External IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i intip}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal IP address.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The specified NAT pair was successfully removed.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENATIPNOTEXTERNALIP\cell The specified NAT IP address is not an External IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENATIPNOTINTERNALIP\cell The specified NAT Internal IP is not an Internal IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYNOTFOUND\cell The specified NAT pair was not found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delNetworkIntf\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delNetworkIntf(}{\b int8 *} {\i ifName}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Remove a network interface.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network interface name.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Remove an existing network interface. Note that a removing network interface should not be referenced.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The specified network interface was successfully removed.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETIFNAME\cell Invalid network interface name.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENETIFREFERENCEDBYIPIF\cell The specified network interface is being referenced by IP interface.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENETIFREFBYROUTE\cell The specified network interface is being referenced by a routing entry.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ELINKTYPESHOULDBERESET\cell The link layer type of the specified network interface should be reset before removing.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENETIFREFERENCEDBYACL\cell The specified network interface is referenced by ACL rule.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delPolicyBasedQoS\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delPolicyBasedQoS(}{\b init8 *} {\i ifName}{\b , int32} {\i rtl8651_delPolicyBasedQoS}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Remove Policy-Based QoS rule.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network interface name.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i rtl8651_delPolicyBasedQoS}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033rtl8651_tblDrvPolicy_t *\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Remove a Policy-Based rule added by rtl8651_addPolicyBasedQoS API.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYNOTFOUND\cell The specified rule was not found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delPPPoEPassthru\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delPPPoEPassthru(}{\b uint16} {\i sessionid}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Delete a pppoe passthru session\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sessionid}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033session ID.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell \cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delPppoeSession\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delPppoeSession(}{\b uint32} {\i pppoeId}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Remove a PPPoE.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i pppoeId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033PPPoE ID.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The specified PPPoE was removed successfully.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDPPPOEID\cell Invalid PPPoE ID.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EPPPOEISINUSE\cell The specified PPPoE is in use.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EPPPOEISREFERENCEDBYRT\cell PPPoE is referenced by routing.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delProtocolBasedNAT\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delProtocolBasedNAT(}{\b uint8} {\i protocol}{\b , ipaddr_t} {\i ExtIp}{\b , ipaddr_t} {\i IntIp}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033delete entry for protocol based NAT\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i protocol}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033IP protocol\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ExtIp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033External IP\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i IntIp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal IP\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell \cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delRoute\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delRoute(}{\b ipaddr_t} {\i ipAddr}{\b , ipaddr_t} {\i ipMask}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Remove a routing entry.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ipAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033The Destination IP address or network address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ipMask}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network mask.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Whenever a netwrok interface is created, an interface route will be automatically added. This kind of route 
can not be removed.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell A routing entry was successfully removed from routing table.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYNOTFOUND\cell The specified routing entry was not found.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ERTCREATEBYIF\cell The specified routing entry was added due to network interface created, hence it can't be removed.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delSession\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delSession(}{\b uint32} {\i sessionId}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Remove a session-based connection.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sessionId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Session ID.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Only a session is hung up and property reset, the session can be removed.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYNOTFOUND\cell The specified session ID was not found.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EPPPOEISINUSE\cell The specified session is still in use. Hand up it and reset its property first.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EPPPOEISREFERENCEDBYRT\cell The session is referenced by routing entry. Remove the route first.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delURLFilterRule\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delURLFilterRule(}{\b uint32} {\i sessionId}{\b , int8 *} {\i string}{\b , int32} {\i strlen}{\b , ipaddr_t} {\i ip_start}{\b , ip_addr_t} {\i ip_end}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Remove a URL Filtering rule.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sessionId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Session ID.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i string}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033URL Filtering string.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i strlen}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033The length of URL Filtering string.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ip_start}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Specify IP Range. The starting IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ip_end}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Specify IP Range. The ending IP address.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033This API removes URL Filtering rules which were added by rtl8651_addURLFilterRule() API.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDINPUT\cell The starting IP adress can not exceed ending IP address.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EENTRYNOTFOUND\cell The specified entry was not found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_delURLfilterString\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_delURLfilterString(}{\b int8 *} {\i string}{\b , int32} {\i strlen}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Delete filter string from filter database.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i string}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033String to be filtered.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i strlen}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033String length of string-to-be-filtered.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033strlen: NULL char NOT counted.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 FAILED\cell Not success.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_enableLogging\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_enableLogging(}{\b uint32} {\i moduleId}{\b , int8} {\i enable}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Enable/Disable logging of specified module.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i moduleId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033module identifier (see rtl861_tblDrv.h).\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i enable}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE to enable logging and FALSE to disable it.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDINPUT\cell Invalid input parameter.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_enableMacAccessControl\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_enableMacAccessControl(}{\b int8} {\i enable}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Enable/Disable MAC Filtering.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i enable}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE: enable, FALSE: disable\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033If MAC Filtering is enabled, packets match MAC rules will be dropped/permitted.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success API call.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_EnableProtocolBasedNAT\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b uint8} {\b rtl8651_EnableProtocolBasedNAT(}{\b int32} {\i enable}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Enable or disable protocol based NAT\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i enable}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE to enable. FALSE to disable.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 int32\cell status of original setting\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_enableSmartNaptCreate\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_enableSmartNaptCreate(}{\b int8} {\i enable}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Enable/Disable smart ASIC NAPT arrangement.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i enable}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE to turn on smart NAPT arrangement, FALSE to turn it off.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033If {\i enable} is TRUE, driver tries its best to allocate an ASIC NAPT entry for both downlink and, if possible, the uplink flow. Enabling this option 
reduces ASIC table collision rate and improves system performance significantly when ASIC table utilization is not high. 
If {\i enable} is FALSE, driver allocates & arranges ASIC NAPT entries normally.\par

Note: If {\i rtl8651_enableSmartNaptCreate()} has been called to disable ASIC acceleration, it automatically turns of this feature.\par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_flushAclRule\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_flushAclRule(}{\b int8} {\i ifName}{\b , int8} {\i Ingress}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Flush the specified Network interface's Ingress/Egress ACL rule.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network interface name.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i Ingress}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Specify Ingress or Egress rule to be flushed.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The Specified ACL rules were flushed.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETIFNAME\cell The specified network interface name was not found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_flushAllNaptConnections\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_flushAllNaptConnections(void}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Delete all ICMP/UDP/TCP NAPT connections.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Value\par\pard\plain\sa160\sl240 \fs21\lang1033{\i rtl8651_flushAllNaptConnections()} has no return value.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Flush whole NAPT table. Both software and ASIC entries are cleared.\par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_flushDemandRoute\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b uint32} {\b rtl8651_flushDemandRoute(}{\b int} {\i identity}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033delete demand route entry\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i identity}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033pppoe Object Id\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Delete all route entry by external ip address\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell always return\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_flushMacAccessControl\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_flushMacAccessControl(void}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Flush all MAC Filtering rule.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033This API will flush all MAC Filtering rules.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success API call.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_flushPolicyBasedQoS\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_flushPolicyBasedQoS(void}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Flush all Policy-Based QoS rules.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_flushPolicyRoute\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_flushPolicyRoute(}{\b int} {\i ip}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033remove policy route\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ip}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033IP Address\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Delete all routing entry by external ip address\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Always return SUCCESS\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_getInboundProtocolBasedNAT\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_getInboundProtocolBasedNAT(}{\b uint8} {\i protocol}{\b , ipaddr_t} {\i ExtIp}{\b , ipaddr_t*} {\i IntIp}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033get entry for protocol based NAT\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i protocol}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033IP protocol\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ExtIp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033External IP\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i IntIp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Pointer to internal IP\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell \cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_getIpUnnumbered\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_getIpUnnumbered(}{\b int8 *} {\i wanIfName}{\b , int8 *} {\i ifName}{\b , ipaddr_t *} {\i netMask}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Get IP Unnumbered Netmask and External network interface name.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i wanIfName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033External Network interface name of IP Unnumbered.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Point to IP Unnumbered external network itnerface name after the API call.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i netMask}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033IP Unnumbered netmask after the API call.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033For an IP-Unnumbered network, it must have a netmask and the netmask must not be 0xffffffff. The API {\i rtl8651_getIpUnnumbered()} 
returns the netmask information and the external network interface name of IP Unnumbered.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDINPUT\cell {\i ifName} and {\i netMask} parameters cannot be NULL.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETIFNAME\cell Invlaid network interface name.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENETIFNOTIPUNNUMBERED\cell The specified network interface is not an IP Unnumbered Network interface.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_getNaptInsideGlobalIpAddr\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b ipaddr_t} {\b rtl8651_getNaptInsideGlobalIpAddr(}{\b int8} {\i isTcp}{\b , ipaddr_t} {\i internalIP}{\b , uint16} {\i internalPort}{\b , ipaddr_t} {\i destIP}{\b , uint16} {\i destPort}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Internal use only. Given 5 connection tuples, returns the external IP address to use when doing NAPT.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i isTcp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE for TCP, FALSE for UDP.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i internalIP}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal IP.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i internalPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal Port.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i destIP}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination IP.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i destPort}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Destination Port.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Given 5 tuples, let driver find a external  IP to use in NAPT.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 0\cell No external IPs configured for NAPT use yet.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 non-0\cell The IP address selected by driver.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033\cf6 Developer Notes\par\pard\plain\sa160\sl240 \fs21\lang1033\cf6 Although all 5 tuples are given, external IP is determined only by {\i internalIP} hashing now.\par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_getOutboundProtocolBasedNAT( uint8 protocol, ipaddr_t *ExtIp, ipaddr_t IntIp ) 
\{\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_getOutboundProtocolBasedNAT( uint8 protocol, ipaddr_t *ExtIp, ipaddr_t IntIp ) 
\{(}{\b uint8} {\i protocol}{\b , ipaddr_t*} {\i ExtIp}{\b , ipaddr_t} {\i IntIp}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033get entry for protocol based NAT\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i protocol}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033IP protocol\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ExtIp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Pointer to external IP\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i IntIp}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Internal IP\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell \cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_getPPPoEPassthru\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_getPPPoEPassthru(}{\b uint16} {\i sid}{\b , ether_addr_t*} {\i clientMac}{\b , ether_addr_t*} {\i serverMac}{\b , uint16*} {\i clientVid}{\b , uint16*} {\i serverVid}{\b , bool} {\i updateTouch}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Return if the PPPoE passthru session is existed. ?\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sid}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033session ID.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i clientMac}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033PPPoE client MAC address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i serverMac}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033PPPoE server MAC address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i clientVid}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033(output) client VLAN ID.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i serverVid}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033(output) server VLAN ID.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i updateTouch}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033indicate whether update the last touch time of this session.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell \cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_getPppoeSessionMac\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_getPppoeSessionMac(}{\b uint32} {\i pppoeId}{\b , ether_addr_t *} {\i macAddr}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Get the source MAC address which the specified PPPoE uses.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i pppoeId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Specify PPPoE ID.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i macAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Source MAC address.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDPPPOEID\cell Invalid PPPoE ID was specified.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_getSessionMac\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_getSessionMac(}{\b uint32} {\i sessionId}{\b , ether_addr_t *} {\i macAddr}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Get a Session's MAC address.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sessionId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Session ID.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i macAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Pointer to MAC address.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Given an existed session-based connection ID, this API will return the session's MAC Address.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDPPPOEID\cell The specified session ID was not found.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EVLANNOMAC\cell The session has no MAC Address found.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_initURLfilter\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_initURLfilter(void}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Init pattern match string for url filtering feature.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 FAILED\cell Not success.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_installLoggingFunction\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_installLoggingFunction(}{\b void *} {\i pMyLoggingFunc}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033install the logging callback function.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i pMyLoggingFunc}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Logging function pointer.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDINPUT\cell Invalid input parameter.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_removeNetworkIntfLinkLayerType\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_removeNetworkIntfLinkLayerType(}{\b int8 *} {\i ifName}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Rmove link layer type and detach network interface from a VLAN.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network interface name.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033The {\i rtl8651_removeNetworkIntfLinkLayerType()} removes an existing network interface. The network interface must not be referenced.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETIFNAME\cell Invalid network interface name.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ECANNOTREMOVEIPUNNUMBER\cell Cannot remove IP Unnumbered network interface. Use {\i rtl8651_delIpUnnumbered()} first.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENETHASNOLLTYPESPECIFY\cell The Network interface has no link layer type specified.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENETIFREFERENCEDBYIPIF\cell The network interface is being referenced by IP interface.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENETISEXTERNAL\cell The specified network interface is an external network interface. Hence it cannot be removed.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_resetL2tpProperty\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_resetL2tpProperty(}{\b uint32} {\i sessionId}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Reset L2TP Property.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sessionId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Session ID. Zero is not allowed.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033After a L2TP session is hung up, this API should be called to reset the L2TP's property.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ESESSIONNOTFOUND\cell The specified Session ID is not found.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success API call.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_resetPppoeSessionProperty\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_resetPppoeSessionProperty(}{\b uint32} {\i pppoeId}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Rest the PPPoE session property.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i pppoeId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033PPPoE ID.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The specified PPPoE was reset successfully.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDPPPOEID\cell Invalid PPPoE ID.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_resetPptpProperty\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_resetPptpProperty(}{\b uint32} {\i sessionId}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Reset PPTP Property.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sessionId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Session ID. Zero is not allowed.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033After a PPTP session is hung up, this API should be called to reset the PPTP's property.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ESESSIONNOTFOUND\cell The specified Session ID is not found.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success API call.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_setArpAgingTime\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_setArpAgingTime(}{\b uint16} {\i agTime}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Set arp aging time.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i agTime}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Aging time.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The aging time was set successfully.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_setDefaultAcl\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_setDefaultAcl(}{\b int8} {\i ifName}{\b , int8} {\i defAction}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Set default ACL rule action. If all rule is mismatch, the default rule will alway be matched.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network interface name.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i defAction}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033The default action. It would be the following values: RTL8651_ACL_CPU(If mismatch, trap packet to CPU), RTL8651_ACL_DROP(if mismatch, drop packet), RTL8651_ACL_PERMIT(if mismatch, permit packet).\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Set the specified network interface's ACL to PERMIT, DROP or toCPU if rule mismatch. Note: If no ACL rule in the ACL table, default action always PERMIT. Once any ACL rule was added, the user-configure default action will work.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The ACL default action was set successfully.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDINPUT\cell Unknown default action type or specified network interface is NULL.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETIFNAME\cell The specified network interface name was not found.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_setFlowControl\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_setFlowControl(}{\b uint32} {\i port}{\b , int8} {\i enable}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Set Flow Control.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i port}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Physical port number.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i enable}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE: Enable flow control, FALSE: Disable flow control.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033This API is used to set a port's flow control.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDPORT\cell Invalid Port Number.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success API call.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_setL2tpProperty\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_setL2tpProperty(}{\b uint32} {\i sessionId}{\b , uint16} {\i tunnelId}{\b , ipaddr_t} {\i s_ipaddr}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Set L2TP's Property.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sessionId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Session ID. Zero is not allowed.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i tunnelId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Tunnel ID got from L2TP handshake.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i s_ipaddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033L2TP Server IP address.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Set L2TP's property. If a L2TP session is dialed up, this API should be called to add the L2TP session's property.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ESESSIONNOTFOUND\cell The specified Session ID is not found.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOARPFOUND\cell We have no  L2TP Server's ARP.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success API call.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_setLanSideExternalIpInterface\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_setLanSideExternalIpInterface(}{\b int8 *} {\i ifName}{\b , ipaddr_t} {\i ipAddr}{\b , ipaddr_t} {\i ipMask}{\b , int8} {\i isExternal}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Set IP Unnumebr IP interface to global IP interface.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Netwrok interface name. It should be internal network interface in IP Unnumbered network.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ipAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Specify Gateway IP address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ipMask}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network mask.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i isExternal}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE to set IP interface to be external interface. FALSE to set IP interface to be internal interface.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033The {\i rtl8651_setLanSideExternalIpInterface()} sets an IP interface to be a global IP interface. The {\i ifName} paramater should be an 
IP Unnumbered Internal Netwrok interface.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The specified IP interface was set to global IP interface successfully.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETIFNAME\cell Invalid network interface name.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOTIPUNNUMBEREDNETIF\cell The specified network interface is not Lan Side Ip Unnumbered Network interface.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EIPUNINTIPINTFNEED\cell The specified network interface should be IP Unnumbered internal network interface.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOIPINTFFOUND\cell The specified IP interface was not found.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EIPUNISREFERENCEDBYPPPOE\cell The IP Unnumbered IP interface is referenced by PPPoE Session.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_setMacAccessControlDefaultPermit\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_setMacAccessControlDefaultPermit(}{\b int8} {\i isPermit}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Set Default MAC Filtering rule.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i isPermit}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE: default rule is permit, FALSE: default rule is drop.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033If packet doesn't match any MAC Filtering rule, the action decision(permit or drop) depends on the defule rule setting.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success API call.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_setNaptIcmpTimeout\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_setNaptIcmpTimeout(}{\b uint32} {\i timeout}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Set NAPT ICMP entry aging time.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i timeout}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Aging time in second.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033The short aging time will get better performance, but too short aging time will casue ICMP connection fail.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_setNaptTcpFastTimeout\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_setNaptTcpFastTimeout(}{\b uint32} {\i timeout}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Set NAPT TCP entry Fast aging time.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i timeout}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Aging time in second.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033There are three aging time for any NAPT TCP entry - Fast, Long and Medium aging time. 
Fast timeout: Before the three-way handshaking complete. Shorter Fast timeout may get more good performance, but too short timeout value will casue TCP connection fail. 
Long timeout: After the three-way handshaking and before the first FIN is received. 
Medium timeout: Once a FIn is received, the TCP entry changes to Medium timeout.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_setNaptTcpLongTimeout\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_setNaptTcpLongTimeout(}{\b uint32} {\i timeout}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Set NAPT TCP entry long aging time.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i timeout}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Aging time in second.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033There are three aging time for any NAPT TCP entry - Fast, Long and Medium aging time. 
Fast timeout: Before the three-way handshaking complete. Shorter Fast timeout may get more good performance, but too short timeout value will casue TCP connection fail. 
Long timeout: After the three-way handshaking and before the first FIN is received. 
Medium timeout: Once a FIn is received, the TCP entry changes to Medium timeout.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_setNaptTcpMediumTimeout\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_setNaptTcpMediumTimeout(}{\b uint32} {\i timeout}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Set NAPT TCP entry Medium aging time.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i timeout}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Aging time in second.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033There are three aging time for any NAPT TCP entry - Fast, Long and Medium aging time. 
Fast timeout: Before the three-way handshaking complete. Shorter Fast timeout may get more good performance, but too short timeout value will casue TCP connection fail. 
Long timeout: After the three-way handshaking and before the first FIN is received. 
Medium timeout: Once a FIn is received, the TCP entry changes to Medium timeout.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_setNaptTcpUdpPortRange\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_setNaptTcpUdpPortRange(}{\b uint16} {\i start}{\b , uint16} {\i end}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Table driver internal use. Read an entry from ASIC or from ASIC cache. If {\i dontcache} is TRUE, read directly from ASIC.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i start}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033first port number for NAPT translation.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i end}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033last port number for NAPT translation.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Set TCP/UDP port range for ASIC NAPT engine and software NAPT driver.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Port range configured to ASIC successfully.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDINPUT\cell Both port numbers given must be multiples of 1024 and {\i end} must greater than {\i start}.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033\cf6 Developer Notes\par\pard\plain\sa160\sl240 \fs21\lang1033\cf6 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_setNaptUdpTimeout\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_setNaptUdpTimeout(}{\b uint32} {\i timeout}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Set NAPT UDP entry aging time.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i timeout}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Aging time in second.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033The short aging time will get better performance, but too short aging time will casue UDP connection fail.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_setPortPriorityQueue\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_setPortPriorityQueue(}{\b uint32} {\i port}{\b , int8} {\i highPriority}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Set Port's priority.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i port}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Physical port number.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i highPriority}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE: high, FALSE: low.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033If a port is set to have high priority, packets received from the port will have high priority when send it to output queue.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDINPUT\cell Invalid input parameter.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success API call.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_setPppoeSessionHangUp\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_setPppoeSessionHangUp(}{\b uint32} {\i PPPoEID}{\b , int32} {\i enable}{\b , uint32} {\i sec}{\b , int32 (*)(uint32)} {\i p_callBack}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Enable/Disable PPPoE hang up.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i PPPoEID}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033PPPoE ID.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i enable}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033TRUE to enable auto hangup. FALSE to disable auto hangup.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sec}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Time in second to auto hangup.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i p_callBack}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Call back function.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDINPUT\cell Invalid input parameter.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_setPppoeSessionProperty\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_setPppoeSessionProperty(}{\b uint32} {\i pppoeId}{\b , uint16} {\i sid}{\b , ether_addr_t *} {\i macAddr}{\b , uint32} {\i port}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Set a PPPoE Session's property.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i pppoeId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Specify PPPoE ID.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sid}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033PPPoE Session ID which is given by ISP.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i macAddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033ISP MAC address.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i port}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Logical port number.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell The specified PPPoE session was set successfully.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDSESSIONID\cell Invalid PPPoE Session ID.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDPPPOEID\cell Invalid PPPoE ID.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EPROPERTUALREADYSET\cell The specified PPPoE property was already set to another PPPoE ID.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EAGGREGATORHASNOPORT\cell Not allow aggregator without port member.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EPPPOEHASPROPERTYSET\cell The specified PPPoE ID already has property set.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EPPPOECANNOTADDL2ENTRY\cell Cannot add L2 entry for the specified PPPoE.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_setPptpProperty\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_setPptpProperty(}{\b uint32} {\i sessionId}{\b , uint16} {\i callId}{\b , uint16} {\i peerCallId}{\b , ipaddr_t} {\i s_ipaddr}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Set PPTP's Property.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i sessionId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Session ID. Zero is not allowed.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i callId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033PPTP call ID.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i peerCallId}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Peer PPTP call ID.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i s_ipaddr}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033PPTP Server IP address.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033Set PPTP's property. If a PPTP session is dialed up, this API should be called to add the PPTP session's property.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ESESSIONNOTFOUND\cell The specified Session ID is not found.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENOARPFOUND\cell We have no  PPTP Server's ARP.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success API call.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_setQueueScheduling\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_setQueueScheduling(}{\b uint32} {\i type}{\b , uint32} {\i weight}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Set High/Low Queue scheduling.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i type}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Specify which packet scheduling will be used. Currently, only RTL8651_QOS_RR is supported.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i weight}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Specify high/low queue wieght. RTL8651_RR_H4_L1: 4:1, RTL8651_RR_H8_L1: 8:1, RTL8651_RR_H16_L1: 16:1, RTL8651_RR_H_FIRST: Always high queue first.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033This API is used to set queue scheduling and the high/low queue weight. Currently we only support round-robin packet scheduling.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDINPUT\cell Invalid Input parameter.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Success API call.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_specifyNetworkIntfLinkLayerType\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_specifyNetworkIntfLinkLayerType(}{\b int8 *} {\i ifName}{\b , uint32} {\i llType}{\b , uint16} {\i vid}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Bind networking interface to a VLAN.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i ifName}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Network interface name.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i llType}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Specify link layer type, which includes RTL8651_LL_VLAN, RTL8651_LL_PPPOE, RTL8651_LL_PPTP, RTL8651_LL_L2TP.\par

\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i vid}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033VLAN ID.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033For a Layer-3 or Layer-4 switch, the VLAN should have a network interface attached. Hence, if this API is success, the 
specified VLAN will change to Layer-3 or Layer-4.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EUNKNOWLINKLAYERTYPE\cell Unknow link layer type.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVNETIFNAME\cell Invalid network interface name.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EINVALIDVLANID\cell Invalid VLAN ID.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EVLANPROMISSET\cell If VLAN promisuous mode is set, the VLAN cannot attatch any network interface.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EVLANISREFERENCEDBYPPPOE\cell If VLAN is referenced by PPPoE, the VLAN cannot attach any netwrok interface.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_ENETIFLLTYPEALREADYSET\cell Link layer of the specified network itnerface type already set.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 TBLDRV_EVLANNOMAC\cell The specified VLAN has no MAC address allocated.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_tblDrvInit\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b int32} {\b rtl8651_tblDrvInit(}{\b rtl8651_tblDrvInitPara_t *} {\i configPara}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Initiate Table Driver.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i configPara}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033Initial parameters setting.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033This API should be called to initiate Table Driver when in the RTL8651 initialization state.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 SUCCESS\cell Table Driver Initialization was success.\cell }\pard \intbl \row\pard\plain\intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25{\fs18 FAILED\cell Table DRiver Initialization failed.\cell }\pard \intbl \row\pard\plain\li240\sa0\sl240 \f2\fs20\lang1033 \par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_timeUpdate\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b void} {\b rtl8651_timeUpdate(}{\b uint32} {\i secPassed}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Timer for Table Drvier.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Parameters\par\pard\plain\s50\sl-240\keepn \f0\fs21\lang1033{\i secPassed}\par
\pard\plain\s54\li280\sa80\sl-240 \f0\fs21\lang1033How many seconds passed.\par

\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033If table driver is used, this API should be called periodically. It will update some tables in the Table Driver.\par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_updateAsicIcmpTable\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b void} {\b rtl8651_updateAsicIcmpTable(void}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Housekeeping function. Replace expired ASIC ICMP entries with software candidate flows. Also synchronize dynamic status information of each ASIC entry with software table.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Value\par\pard\plain\sa160\sl240 \fs21\lang1033{\i rtl8651_updateAsicIcmpTable()} has no return value.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033This function must be called by maintenance thread to synchronize asic table entries with software table periodically, 
If an ASIC entry is unused, select a candidate flow from software table to ASIC to accelerate forwarding spped of selected flow.\par
\pard\plain\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033\par
\pard\plain\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033rtl8651_updateAsicNaptTable\par
\pard \plain \sa160\sl240 \fs21\lang1033{\b void} {\b rtl8651_updateAsicNaptTable(void}{\b ) }\par
\pard\plain\sa160\sl240 \fs21\lang1033Housekeeping function. Replace expired ASIC NAPT entries with software candidate flows. Also synchronize dynamic status information of each ASIC entry with software table.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Return Value\par\pard\plain\sa160\sl240 \fs21\lang1033{\i rtl8651_updateAsicNaptTable()} has no return value.\par
\pard\plain\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033Comments\par\pard\plain\sa160\sl240 \fs21\lang1033This function must be called by maintenance thread to synchronize asic table entries with software table periodically, 
If an ASIC entry is unused, select a candidate flow from software table to ASIC to accelerate forwarding spped of selected flow.\par
}
